<?xml version="1.0" encoding="UTF-8"?>
<ead>
   <eadheader countryencoding="iso3166-1"
              dateencoding="iso8601"
              findaidstatus="edited-full-draft"
              langencoding="iso639-2b"
              repositoryencoding="iso15511">
      <eadid xmlns:cdlpath="http://www.cdlib.org/path/"
             url="http://www.oac.cdlib.org/findaid/ark:/13030/kt6r29s2gt"
             identifier="ark:/13030/kt6r29s2gt">v0058.xml</eadid>
      <filedesc>
         <titlestmt>
            <titleproper type="filing">Stanford University, Department of Computer Science, Stanford Computer Forum Distinguished Lecture Series, Videorecordings</titleproper>
            <titleproper>Guide to the Stanford University, Department of Computer Science, Stanford Computer Forum Distinguished Lecture Series, Videorecordings <num>V0058</num>
            </titleproper>
            <author>Daniel Hartwig &amp; Jenny Johnson</author>
         </titlestmt>
         <publicationstmt>
            <publisher>Department of Special Collections and University Archives</publisher>
            <p>
               <date>November 2010</date>
            </p>
            <address>
               <addressline>Green Library</addressline>
               <addressline>557 Escondido Mall</addressline>
               <addressline>Stanford 94305-6064</addressline>
               <addressline>specialcollections@stanford.edu</addressline>
               <addressline>URL: <extptr href="http://library.stanford.edu/spc"
                          show="new"
                          title="http://library.stanford.edu/spc"
                          linktype="simple"/>
               </addressline>
            </address>
         </publicationstmt>
         <notestmt>
            <note>
               <p>This encoded finding aid is compliant with Stanford EAD Best Practice Guidelines, Version 1.0.</p>
            </note>
         </notestmt>
      </filedesc>
      <profiledesc>
         <creation>This finding aid was produced using ArchivesSpace on <date>2018-01-19 15:57:58 -0800</date>.</creation>
         <langusage>Finding aid written in <language langcode="eng" scriptcode="Latn">English</language>
         </langusage>
         <descrules>Describing Archives: A Content Standard</descrules>
      </profiledesc>
   </eadheader>
   <archdesc audience="internal" level="collection" id="archdesc-1.2">
      <did id="did-1.2.1">
         <langmaterial>
            <language langcode="eng">English</language>
         </langmaterial>
         <repository>
            <corpname>Department of Special Collections and University Archives</corpname>
         </repository>
         <unittitle>Stanford University, Department of Computer Science, Stanford Computer Forum Distinguished Lecture Series, videorecordings</unittitle>
         <origination label="creator">
            <corpname rules="dacs" source="naf">Stanford University. Computer Science Department</corpname>
         </origination>
         <unitid>V0058</unitid>
         <physdesc altrender="whole">
            <extent altrender="materialtype spaceoccupied">15.25 Linear Feet</extent>
         </physdesc>
         <unitdate normal="1978/1998" type="inclusive">1978-1998</unitdate>
         <physloc id="aspace_e70393d10f7a2b0dfb5ea1edcae9c589">Special Collections and University Archives materials are stored offsite and must be paged 36-48 hours in advance. For more information on paging collections, see the department's website: http://library.stanford.edu/depts/spc/spc.html.</physloc>
         <abstract id="aspace_d38d29ffa8cb7070f6cb5a026b9e908f">Lectures by computer professionals and professors from Stanford and other universities presented to the Computer Systems Laboratory Seminar, the Department of Computer Science Colloquium, and other special events.</abstract>
      </did>
      <acqinfo id="aspace_fa52fd17181caee106673caeb4393a93">
         <head>Immediate Source of Acquisition note</head>
         <p>Administrative transfers, 1989, 1990, 2001, 2016.</p>  
      </acqinfo>
      <accessrestrict id="aspace_d9ba3a74d5ce4a90e600de796098bb9b">
         <head>Information about Access</head>
         <p>The materials are open for research use; materials must be requested at least 48 hours in advance of intended use. Audio-visual materials are not available in original format, and must be reformatted to a digital use copy.</p>  
      </accessrestrict>
      <userestrict id="aspace_8970ab3d66355d69f203b7648f2d3f96">
         <head>Ownership &amp; Copyright</head>
         <p>All requests to reproduce, publish, quote from, or otherwise use collection materials must be submitted in writing to the Head of Special Collections and University Archives, Stanford University Libraries, Stanford, California 94304-6064. Consent is given on behalf of Special Collections as the owner of the physical items and is not intended to include or imply permission from the copyright owner. Such permission must be obtained from the copyright owner, heir(s) or assigns. See: http://library.stanford.edu/depts/spc/pubserv/permissions.html.</p>
         <p>Restrictions also apply to digital representations of the original materials. Use of digital files is restricted to research and educational purposes.</p>  
      </userestrict>
      <prefercite id="aspace_311f57515ccb3eda326d283289c72537">
         <head>Cite As</head>
         <p>Stanford University, Department of Computer Science, Stanford Computer Forum Distinguished Lecture Series, Videorecordings (V0058). Dept. of Special Collections and University Archives, Stanford University Libraries, Stanford, Calif.</p>  
      </prefercite>
      <scopecontent id="aspace_a81a1d8de33b7e9ca8ad92c61ab81ce8">
         <head>Description of the Collection</head>
         <p>Lectures by computer professionals and professors from Stanford and other universities presented to the Computer Systems Laboratory Seminar, the Department of Computer Science Colloquium, and other special events.</p>  
      </scopecontent>
      <controlaccess id="controlaccess-1.2.7">
         <subject source="lcsh">Science -- History.</subject>
         <genreform source="aat">Videorecordings.</genreform>
         <subject source="lcsh">Computer engineering</subject>
         <subject source="lcsh">Computers.</subject>
         <subject source="lcsh">Computer programs.</subject>
         <persname rules="aacr" source="ingest">Oren, Timothy.</persname>
         <persname rules="aacr" source="ingest">Diaconis, Persi</persname>
         <persname rules="aacr" source="ingest">Nishi, Yoshio.</persname>
         <persname rules="aacr" source="ingest">Reid, Brian K.</persname>
         <persname rules="aacr" source="ingest">Shoch, John F.</persname>
         <persname rules="aacr" source="ingest">Hertzfeld, Andy.</persname>
         <persname rules="aacr" source="ingest">Hoff, Ted.</persname>
         <persname rules="aacr" source="ingest">Kildall, Gary A.</persname>
         <persname rules="aacr" source="ingest">Miller, William F.</persname>
         <persname rules="aacr" source="ingest">Bobrow, Daniel G. (Daniel Gureasko)</persname>
         <persname rules="aacr" source="ingest">Lenat, Douglas B.</persname>
         <persname rules="aacr" source="ingest">Bechtolsheim, Andy.</persname>
         <corpname rules="dacs" source="naf">Stanford University. Computer Science Department</corpname>
         <persname rules="aacr" source="ingest">Felsenstein, Lee.</persname>
         <persname rules="aacr" source="ingest">Nishi, Yoshio.</persname>
         <corpname rules="dacs" source="naf">Stanford University. Computer Science Department</corpname>
         <persname rules="aacr" source="ingest">Wirth, Niklaus.</persname>
      </controlaccess>
      <dsc type="combined" id="dsc-1.2.8">
         <c01 id="aspace_ref8_vwl" level="file">
            <did>
               <unittitle>Videorecordings</unittitle>
            </did>
            <c02 id="aspace_ref9_zw4" level="file">
               <did>
                  <unittitle>Mainframe CPU Design with LSI and VLSI, by Dr. Gary Tjaden.</unittitle>
                  <unitid>V0058.002</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (u-matic)</extent>
                  </physdesc>
                  <unitdate normal="1978/1978" type="inclusive">1978-11-08</unitdate>
                  <container id="aspace_42ea588d097bad9df88f1beaa97ec143" type="box">1</container>
               </did>
               <scopecontent id="aspace_92ead111bbbe9ea56f2e3274a89fcc2a">
                  <head>Scope and Contents note</head>
                  <p>A new design approach, called Multiple-Microinstruction- StreamlSingleMacroinstruction- Stream, has been shown to yield mainframe performance using offthe- shelf LSI modules. Design with VLSI does not lend itself to the use of off-theshelf modules, but a very orderly design, such as encouraged with this new approach, is required. This talk describes some of the more subtle aspects of designing with LSI and discusses the new considerations necessary for designing with VLSI.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref12_7e0" level="file">
               <did>
                  <unittitle>Fibernet: Multimode Optical Fibers for Local Computer Networks, by Dr. Robert M. Metcalfe.</unittitle>
                  <unitid>V0058.003</unitid>
                  <unitdate normal="1978/1978" type="inclusive">1978-12-06</unitdate>
                  <physdesc id="aspace_30dacca2e82267465e2c938768e19c2a">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_ad4e4043df78bc7d7b66dc2bbe9c55cc" type="box">1</container>
               </did>
               <scopecontent id="aspace_82c123672dd108de1249bcd142f0da43">
                  <head>Scope and Contents note</head>
                  <p>Local computer networks which communicate over copper conductors have been developed both to promote resource sharing and provide increased performance. Such networks typically operate at bandwidth x length (Bw*L) products up to a few MHz*km. Here we consider the use of fiber optics in such networks, and give a status report on a star-configured fiber optic network experiment called Fibernet which operates at a B w*L product of -100 MHz*km at a data rate of 150 Mbits/s and which in its final phases with connect up to 19 stations. We compare the merits and problems for linear, ring and several star configurations, and of active versus passive networks.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref15_qnr" level="file">
               <did>
                  <unittitle>Dataflow: Architecture and Language, by Prof. Charles S. Wetherell.</unittitle>
                  <unitid>V0058.004</unitid>
                  <unitdate normal="1979/1979" type="inclusive">1979-04-18</unitdate>
                  <physdesc id="aspace_b89fcb7e2edf8ceca945a2cb523db39c">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_da6b5b2ccce7568cfba4de6877ebde33" type="box">1</container>
               </did>
               <scopecontent id="aspace_e89d46cb7b38455133e02dc150004ba8">
                  <head>Scope and Contents note</head>
                  <p>Large scientific computations require not just greater throughput from computing systems, but also faster response time. The dataflow architecture with run faster by utilizing any army of cheap, slow, easily replicatable processing units. This novel design also forces some novelties into programming languages used on the dataflow machine. Particularly important are explicit exposure of parallel computations and the complete avoidance of side effects. The new architecture, the associated language, and the effects on scientific applications are all discussed.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref18_vu1" level="file">
               <did>
                  <unittitle>A Proposed Standard for Floating-Point Arithmetic, by Dr. John Palmer.</unittitle>
                  <unitid>V0058.005</unitid>
                  <unitdate normal="1978/1978" type="inclusive">1978-11-01</unitdate>
                  <physdesc id="aspace_00369131221624e43c5d5e5e3ab4da2d">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_a8e14c668901cfa32ea05187a41ca767" type="box">1</container>
               </did>
               <scopecontent id="aspace_9299d094e8cab331674ee1ed22bd16fb">
                  <head>Scope and Contents note</head>
                  <p>A standard for floating-point arithmetic is under serious consideration by an IEEE standards committee. INTEL has implemented a subset of the proposed standard in hardware and software. The proposed standard is explained along with some evaluation of its benefits and costs.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref21_skc" level="file">
               <did>
                  <unittitle>The Mu-Net: A Scalable Multiprocessor Architecture, by Prof. Stephen Ward.</unittitle>
                  <unitid>V0058.006</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (u-matic)</extent>
                  </physdesc>
                  <unitdate normal="1979/1979" type="inclusive">1979-01-17</unitdate>
                  <container id="aspace_6bc94751ff61d1589c7a2aeb002cf075" type="box">1</container>
               </did>
               <scopecontent id="aspace_aa8ee0df1bdf0dd53e4e00e287a9c1bc">
                  <head>Scope and Contents note</head>
                  <p>A research program leading to tools and methodology for dealing with a wide spectrum of real-time computation requirements is described. Two major foci of this research are CONSORT, a very high-level programming language specialized to applications imposing hard real-time constraints, and the Mu-Net, a mUltiprocessor run-time system whose performance characteristics are transparently scalable over a wide range.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref24_d81" level="file">
               <did>
                  <unittitle>Design Tradeoffs of the VAX 111780, by Dr. David M. Plummer.</unittitle>
                  <unitid>V0058.007</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (u-matic)</extent>
                  </physdesc>
                  <unitdate normal="1979/1979" type="inclusive">1979-02-14</unitdate>
                  <container id="aspace_da5a8e9a67fd9b671002dec539154998" type="box">1</container>
               </did>
               <scopecontent id="aspace_bc8d8a11ffcd7319984d3cfc0f2876cd">
                  <head>Scope and Contents note</head>
                  <p>David Plummer provides an overview of the evolutionary design process involved in extending the PDPII into the VAX 111780. A number of the interesting architectural features of the machine were discussed within the context of compromises and tradeoffs in performance, cost and utility. These topics include the virtual memory system, variable length instruction formats, bit efficiency, uniform software interfaces and the distribution of architectural components to achieve better performance.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref27_ijt" level="file">
               <did>
                  <unittitle>Intel 2920 Analog Microprocessor: Architecture and Applications by Dr. Ted Hoff.</unittitle>
                  <unitid>V0058.008</unitid>
                  <unitdate normal="1979/1979" type="inclusive">1979-10-10</unitdate>
                  <physdesc id="aspace_ab8ef082b6661d1645a9406307f3b1dc">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_7e68872f08da04bd285b859812b72eec" type="box">2</container>
               </did>
               <scopecontent id="aspace_6c67db768f831d3de529970308cc9368">
                  <head>Scope and Contents note</head>
                  <p>The 2920 is a single chip digital microprocessor which contains analog to digital and digital to analog conversion. This processor may be used to implement a variety of traditional analog functions such as modems, speech synthesizers and filter arrays.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref30_5rs" level="file">
               <did>
                  <unittitle>The Motorola 68000 Microprocessor, by Dr. Edward Stritter.</unittitle>
                  <unitid>V0058.009</unitid>
                  <unitdate normal="1979/1979" type="inclusive">1979-10-31</unitdate>
                  <physdesc id="aspace_71867a42f8afc0034ae319f58f22f620">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_ba1a3d47ec8fd656720fb0803a35d6f5" type="box">2</container>
               </did>
               <scopecontent id="aspace_6055130f3ba5aa598366b7a08b0c965a">
                  <head>Scope and Contents note</head>
                  <p>The semiconductor industry has translated advances in LSI technology into a new generation of very high performance microprocessors. One such processor is the Motorola 68000. This presentation discusses the 68000 from the points of view of the programmer, the system designer and the computer architect. The instruction set, register set and the bus structure is described. In addition, the implementation and internal structure of the chip is discussed, particularly in terms of performance goals and LSI technology constraints.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref33_xjb" level="file">
               <did>
                  <unittitle>Secrets of High Performance Processor Design, by Dr. Thomas M. McWilliams.</unittitle>
                  <unitid>V0058.010</unitid>
                  <unitdate normal="1980/1980" type="inclusive">1980-04-09</unitdate>
                  <physdesc id="aspace_1f4a0d96384d4bf78e9bb9e7b857c475">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_80a94a84aa9eb53182a2c4dc6f0f2d8e" type="box">2</container>
               </did>
               <scopecontent id="aspace_c7e3c9d5e30c92d5ca74bc94d5f7ed92">
                  <head>Scope and Contents note</head>
                  <p>This talk reveals a number of major secrets central to the design of modem top-of-theline digital processors. It treats several of the basic techniques and circuits which performance-oriented designers currently use to realize maximum throughput implementations of a given architecture, and discusses the impact of several common architectural features on the design of very high performance machines. The throughput-enhancing techniques used in the designs of the S-1 Mark I and Mark IIA processors are used extensively as illustrations of these design principles and practices.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref36_xyc" level="file">
               <did>
                  <unittitle>An Implementation of PLII Subset G for Limited Resource Computers, by Dr. Gary A. Kildall.</unittitle>
                  <unitid>V0058.011</unitid>
                  <unitdate normal="1980/1980" type="inclusive">1980-04-16</unitdate>
                  <physdesc id="aspace_caffe12d58cf162415f6c2944643ffe1">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_342bb6edf19662a3d710b453cb3fd8fc" type="box">2</container>
               </did>
               <scopecontent id="aspace_7e9df52c01361d883fde953828f0d917">
                  <head>Scope and Contents note</head>
                  <p>PLII-80 is an application language for microprocessor based computers which use the CP/M. operating system, and is based upon the new ANS PLII General Purpose Subset, called Subset G. The subset includes the more significant application oriented features, while eliminated the seldom-used or redundant constructs. the resulting language is simpler to learn, more consistent in form, and easier to compile. The PLII- 80 translator, discussed here, is a three pass optimizing compiler which operates under CP/M. in a 38 kilobyte area. the significant features of Subset G are presented, along with a number of implementation techniques used to reduce memory requirements while providing a measure of code improvement during the code generation phase</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref39_0bj" level="file">
               <did>
                  <unittitle>Execute Only Program Memories by Dr. Marc T. Kaufman.</unittitle>
                  <unitid>V0058.012</unitid>
                  <unitdate normal="1980/1980" type="inclusive">1980-05-17</unitdate>
                  <physdesc id="aspace_20a3f1d8eaa2251d7b1056a8e23eae5a">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_275ae78f4a0de69537e00d8632b2a002" type="box">2</container>
               </did>
               <scopecontent id="aspace_e3f5069f18aaf24c2349fe57e7603ea9">
                  <head>Scope and Contents note</head>
                  <p>A new technique has been developed that allows computer programs to be protected from copying, while still allowing them to be executed. The method is applicable to general purpose computers, including hobby computers.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref42_ojy" level="file">
               <did>
                  <unittitle>Experience with an Applicative String Processing Language, Dr. James Morris.</unittitle>
                  <unitid>V0058.013</unitid>
                  <unitdate normal="1980/1980" type="inclusive">1980-05-28</unitdate>
                  <physdesc id="aspace_9f80cb4d7f1bbd38d15930ca9641adba">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_cca0e81bde5197c7691f13ed71144992" type="box">2</container>
               </did>
               <scopecontent id="aspace_2fa585206b58f606b53b7391c2bb7e33">
                  <head>Scope and Contents note</head>
                  <p>Experience using and implementing the language Poplar is described. The major conclusions are: applicative programming can be made more natural through the use of built-in iterative operators and post-fix notation. Clever evaluation strategies, such as lazy evaluation, can make applicative programming more computations efficient. Patte:n matching can be performed in an applicative framework. Many problems remaIn.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref45_zqr" level="file">
               <did>
                  <unittitle>Architecture of the MIT LISP Machine, by Thomas F. Knight.</unittitle>
                  <unitid>V0058.014</unitid>
                  <unitdate normal="1980/1980" type="inclusive">1980-11-12</unitdate>
                  <physdesc id="aspace_d2640609ec9f39da1f7262b2629eedac">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_e80d5e942dec447a1b14aa5803bae56b" type="box">3</container>
               </did>
               <scopecontent id="aspace_e6450f35aaade16d0017f26e21cef9a9">
                  <head>Scope and Contents note</head>
                  <p>The LISP machine is a general purpose emulation engine tailored to the execution of compiled LISP. It was designed in 1975 as the hardware basis for a completely new implementation of LISP in a personal machine environment. The LISP machine, like other personal machines, has an integrated display, keyboard/mouse, and high bandwidth local network. In the light of the now familiar nature of these components, this talk concentrates on the design and architecture of the emulation engine, and the features which make it especially well suited for execution of compiled LISP. These include fast typed object dispatcher and hardware for assisting the Baker real time garbage collector algorithm.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref48_ulj" level="file">
               <did>
                  <unittitle>The Transaction Concept: Virtues and Limitations, by Dr. James N. Gray.</unittitle>
                  <unitid>V0058.015</unitid>
                  <unitdate normal="1981/1981" type="inclusive">1981-05-13</unitdate>
                  <physdesc id="aspace_d4332d05fa3d88d0c0a3a3b4a92032d8">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <dao audience="internal"
                       actuate="onrequest"
                       href="https://sul-streaming.stanford.edu/collections/v0058/hy857my3189_web.html"
                       show="new"
                       title="The Transaction Concept: Virtues and Limitations, by Dr. James N. Gray.">
                     <daodesc>
                        <p>The Transaction Concept: Virtues and Limitations, by Dr. James N. Gray.: 13 May 1981</p>
                     </daodesc>
                  </dao>
                  <container id="aspace_795496efa865b875e63b99ffe69f4a19" type="box">3</container>
               </did>
               <scopecontent id="aspace_725172711cf5024f186257213d939bad">
                  <head>Scope and Contents note</head>
                  <p>Transactions are transformations of state which have the properties of atomicity (all or nothing), durability (effects survive failures) and consistency (they implement the correct transformations). The transaction concept is key to the structuring of data management applications. The concept seems to have applicability to programming systems in general. This talk restates the transaction concepts and attempts to put several implementation approaches in perspective. It then describes some areas which require further study: (1) the integration of the transaction concept with the notion of abstract data type, (2) some techniques to allow transactions to be composed of subtransactions, and (3) handling transactions which last for extremely long times (days or months).</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref51_gr9" level="file">
               <did>
                  <unittitle>A RISCy Approach to Microcomputer Technology, by Prof. David A. Patterson.</unittitle>
                  <unitid>V0058.016</unitid>
                  <unitdate normal="1981/1981" type="inclusive">1981-05-17</unitdate>
                  <physdesc id="aspace_203426bd22c1cd39f27cb0b1fa66166b">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_a5012b2db45a00c66eae9964dbe79317" type="box">3</container>
               </did>
               <scopecontent id="aspace_2e33e6c87b3b11c3397d49b9632c4515">
                  <head>Scope and Contents note</head>
                  <p>The Reduced Instruction Set Computer (RISC) Project investigates an alternative to the general trend towards computers with increasingly complex instruction sets. By a judicious choice of a proper set of instructions and the design of a corresponding architecture, one can obtain a machine with a high effective throughput. The simplicity of the instruction set and addressing modes allows most instructions to execute in a single machine cycle, and the simplicity of each instruction guarantees a short cycle time. In addition such a machine should have a much shorter design time. This computer is being implemented as part of a four quarter sequence of graduate courses in which students propose and evaluate architectural ideas, design VLSI components, integrate these components into a single chip, and finally test the chips that they have designed. We are nearing the end of the third phase. After presenting the architecture and our design aids, we describe how the goal of the project evolved to building a computer the size of a Motorola 68000 microprocessor with the performance of a V AX 11 minicomputer.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref54_x8w" level="file">
               <did>
                  <unittitle>The Polycyclic Architecture, by Dr. B.R. Rau.</unittitle>
                  <unitid>V0058.017</unitid>
                  <unitdate normal="1981/1981" type="inclusive">1981-11-18</unitdate>
                  <physdesc id="aspace_1392d61bffaa92c08901c091d13e42c5">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_53dfb4ae71ada8e8610c0ace3ea8a5bc" type="box">3</container>
               </did>
               <scopecontent id="aspace_eb76057a1c0335b10bc597e95968d3b3">
                  <head>Scope and Contents note</head>
                  <p>A horizontal architecture uses a wide instruction word to simultaneously control multiple resources. Such architectures offer the potential for high performance scientific computing at a modest cost. If this potential performance is to be realized the multiple resources of a horizontal processor must be scheduled effectively. The scheduling task for conventional horizontal processors is quite complex and the construction of highly optimized compilers for them is a difficult and expensive project. The polycyclic architecture is a horizontal architecture with support for the task scheduling by using delay elements (storage embedded within the interconnection scheme).</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref57_55b" level="file">
               <did>
                  <unittitle>Translation Buffer Performance in the V AX-lII780, by Dr. Douglas Clark.</unittitle>
                  <unitid>V0058.018</unitid>
                  <unitdate normal="1982/1982" type="inclusive">1982-11-10</unitdate>
                  <physdesc id="aspace_ee1448b85ca6c23d0138ce4d2d354b12">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_c762846b599f43e7ba7d94933d75a568" type="box">3</container>
               </did>
               <scopecontent id="aspace_059806a360e99683dc594c0ebe159c71">
                  <head>Scope and Contents note</head>
                  <p>The V AX Translation Buffer (TB) is a cache of recently used virtual-to-physical address translations. In this talk Dr. Clark presents the results of some measurements of the TB in a VAX -111780. The measurements were made with a hardware monitor and the VAX was measured during ordinary timesharing use as well as under a reproducible synthetic workload. Results include the miss ratio of the TB for both Process space and System space, the TB-flushing context switch frequency, and the amount of time spent servicing TB misses. Additional measurements were made with half the TB disabled.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref60_op6" level="file">
               <did>
                  <unittitle>PSL: A Portable LISP System, by Prof. Martin L. Griss.</unittitle>
                  <unitid>V0058.019</unitid>
                  <unitdate normal="1983/1983" type="inclusive">1983-01-26</unitdate>
                  <physdesc id="aspace_8ab9091cad6b550c62878bddec77301e">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_e9c3d8f078ae6ddb3976f1e88385b345" type="box">3</container>
               </did>
               <scopecontent id="aspace_9c86cc2b566f1a6b749af6c04ebe1198">
                  <head>Scope and Contents note</head>
                  <p>PSL is a new portable implementation of LISP, based on the earlier Standard LISP systems from Utah. The system is distinguished by having essentially all of the interpreter and compiler written in PSL itself, compiled by an optimizing compiler. PSL runs on the DEC System 20, the VAX under UNIX, and a variety of Motorola 68000 based systems. Implementations for the CRA Y -1 and IBM-370 are underway. The talk describes the design philosophy and current status of PSL.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref63_5be" level="file">
               <did>
                  <unittitle>VISION TM, A Multi-Window Operating Environment for Personal Computers, by William T. Coleman.</unittitle>
                  <unitid>V0058.020</unitid>
                  <unitdate normal="1983/1983" type="inclusive">1983-03-02</unitdate>
                  <physdesc id="aspace_fb6461451903bbc9798d2630ebfc48e5">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_721721a09bfa702b11dbf958c6a41531" type="box">4</container>
               </did>
               <scopecontent id="aspace_acd55980689482c3320d411853e777d4">
                  <head>Scope and Contents note</head>
                  <p>VisiON is a multi-window operating environment which uses a mouse pointing device. It has been developed so as to be highly portable across personal computers. The system will be demonstrated on the IBM Personal Computer, followed by an overview of the design objectives and the design of the system.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref66_sz0" level="file">
               <did>
                  <unittitle>Life at Ground Zero, by Dr. Peter Stoll.</unittitle>
                  <unitid>V0058.021</unitid>
                  <unitdate normal="1983/1983" type="inclusive">1983-03-30</unitdate>
                  <physdesc id="aspace_1741477d58daa85c110ff6f4bdc04d0b">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_e59f4f2210ffb24c120cd3508830e41f" type="box">4</container>
               </did>
               <scopecontent id="aspace_d0c3c08f208713054a35a5ec8e8d88ce">
                  <head>Scope and Contents note</head>
                  <p>The design of integrated circuits is not yet a stable art, let alone a science. The explosion in scale of the designs changes the very nature of the design problem. Even at the electrical performance level, formerly negligible problem such as lead inductance assume importance. Advantages in many areas argue for the comprehensive use of CMOS for new logic circuit designs.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref69_a2p" level="file">
               <did>
                  <unittitle>Hierarchical Digital Design Methods, by Dr. Glen G. Langdon.</unittitle>
                  <unitid>V0058.022</unitid>
                  <unitdate normal="1983/1983" type="inclusive">1983-04-13</unitdate>
                  <physdesc id="aspace_9f8ea8a1c6d12519b2ec2526c98e81d0">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_fe738b02d2161dab07b655b320b1dd76" type="box">4</container>
               </did>
               <scopecontent id="aspace_57eb2cdbedc95989f0a60d3efaf0c019">
                  <head>Scope and Contents note</head>
                  <p>A hierarchical digital design method which has been used in practice and in teaching a course in computer design will be presented. A relatively simple computer CPU presents an interesting level of complexity which filters out design techniques which "run out of steam" in complex digital systems. The course requires a "paper design: project of a CPU with an 10 bus, interrupt system, indirect addressing, and a studentarchitected subroutine call. The project motivates the student to reduce the complexity of herlhis task by learning a systematic hierarchical approach. Hierarchical levels of a Computer System are described. Digital design deals with three conceptual levels: (1) the instruction set architecture, (2) the functional units of the data flow, and (3) the basic gates and flip-flops. Hierarchical design bridges these conceptual gaps using a combination of strategies: top-down (divide-and-conquer) and bottom-up (construct more powerful functional units). Design is an interactive process, at each level the most important problem is attacked first and the detail is postponed. As the important decisions are made, and the detail is filled in at a lower level, it is usually necessary to modify the design. The data flowlcontrol unit level, the data part and control unit part are treated separately. The data flow involves bussing, registers, and functional units such as MUXs (assemblers), ALUs and shifters. Concurrences classes within the data flow add to the performance. The control unit determines the behavior of the system by sequencing the data flow operations. An important third component to design at this level is the system timing A two-dimensional (2nd level) diagram is advantageous to describe the data flow. A sequence of micro operations (register-transfer statements) is convenient to describe the control flow. System timing is best described with timing charts.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref72_g0g" level="file">
               <did>
                  <unittitle>Digital Printing and Typesetting, by Prof. Brian K. Reid.</unittitle>
                  <unitid>V0058.023</unitid>
                  <unitdate normal="1983/1983" type="inclusive">1983-06-01</unitdate>
                  <physdesc id="aspace_b24deec23f752e3ac4906f672afb4746">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_f6b6bcee30a4a30a5ca63132f3e52e2a" type="box">4</container>
               </did>
               <scopecontent id="aspace_4539308ff272754939d77ed30e9fa2a3">
                  <head>Scope and Contents note</head>
                  <p>Display technology has advanced significantly in recent years; it is now easy to build a workstation with a 1000 by 1000 color display. The technologies for printing those images on paper are significantly less advanced. I [with] begin a quick outline of the various technologies for making printed images and the way that they are currently used. These devices can be uneasily classified into three categories: plotters, typesetters, and laser printers. I explain how each such device works and what its limitations are. The future of printing technology clearly belongs to raster technologies. Raster Plotters such as the Versatec, raster typesetters such as the Alphatype, and raster laser printers such as the Canon have been available for some years, but technologies are developing that will permit laser printing devices, explaining their construction, operation, and control. I conclude with a brief description of the Stanford "Folio" laser printer project, which is the design of an ultrahigh-speed laser printer controller for use with the SUN workstation.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref75_326" level="file">
               <did>
                  <unittitle>Machines Who Learn, by Prof. Douglas B. Lenat.</unittitle>
                  <unitid>V0058.024</unitid>
                  <unitdate normal="1983/1983" type="inclusive">1983-11-15</unitdate>
                  <physdesc id="aspace_7ea0abe592a8b84b2fa4533031ee84d4">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_640839d443a1dc63a19d0c5c137a315c" type="box">4</container>
               </did>
               <scopecontent id="aspace_a4bca5f3b7b9371b6f11ee3213ad2814">
                  <head>Scope and Contents note</head>
                  <p>The major bottleneck in building large AI programs is knowledge acquisition, and one way of widening that is by having the program learn new knowledge automatically. There has been an explosion of interest and activity in machine learning in the past few years. This talk focuses on my own efforts over the past decade to build machines who learn by discovery, guided by a large body of informal heuristic rules. Some of these rules suggest plausible concepts to consider at each moment, some evaluate candidates for interestingness. The domains in which our latest program, EURISKO, explores are quite diverse: set theory, number theory, plumbing, naval ship design, and the design of three-dimensional VLSI circuits. Many of our results are exciting and some are quite humorous.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref78_evx" level="file">
               <did>
                  <unittitle>Machines Who See and Do, by Prof. Rodney A. Brooks.</unittitle>
                  <unitid>V0058.025</unitid>
                  <unitdate normal="1983/1983" type="inclusive">1983-11-22</unitdate>
                  <physdesc id="aspace_654e1fecb13015f1eb03868c2d88b7db">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_f17867a495f7cc70983ca8270105399a" type="box">4</container>
               </did>
               <scopecontent id="aspace_6644144b10e5f38a085aec96be29d570">
                  <head>Scope and Contents note</head>
                  <p>Biological evolution has produced many animals capable of various levels of vision, mobility and manipulative skill. How can we give robots the same abilities? This talk overviews three examples of robot programs in model-based vision, 3-d path planning, and assembly plan checking, and shows a common methodology linking them. In each case a continuous class of possibilities is assumed while a physical process or event is modeled and then "run backwards" to solve the perceptual or planning problem</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref81_dib" level="file">
               <did>
                  <unittitle>The MIPS Project, by Christopher Rowen.</unittitle>
                  <unitid>V0058.026</unitid>
                  <unitdate normal="1983/1983" type="inclusive">1983-11-16</unitdate>
                  <physdesc id="aspace_d63c57b365590fee8c8b4d029597214c">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_5b6f4aa2c112fc2e68239625f0776c43" type="box">5</container>
               </did>
               <scopecontent id="aspace_1daa3a7e5450e080d63527198b2d9647">
                  <head>Scope and Contents note</head>
                  <p>VLSI technology provides new constraints and challenges for computer architects. Silicon can provide low cost and high performance only if the hardware resources of the machine are carefully chosen and heavily used. The MIPS project at Stanford explores the interaction of VLSI with new architectural ideas. Like the Berkeley RISC and IBM 801 projects, MIPS uses a streamlined instruction set. Its heavily pipelined micro architecture ensures high utilization of silicon resources. It relies on advanced compiler technology to shift much complexity of hardware into software. Our nMOS VLSI implementation capitalizes on the natural regularity of the architecture to create a working processor several times the speed of commercial microprocessors. This talk describes the architecture and implementation of MIPS.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref84_ga5" level="file">
               <did>
                  <unittitle>Software Army on the March -Project Strategies and Tactics, by Dr. John R. Mashey.</unittitle>
                  <unitid>V0058.027</unitid>
                  <unitdate normal="1983/1983" type="inclusive">1983-09-28</unitdate>
                  <physdesc id="aspace_6049a759f7b2e517a1ab3de92117cc0f">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_93865068b242bce0b8a1050c51b7a7b7" type="box">5</container>
               </did>
               <scopecontent id="aspace_d41c69b714a4e6569604a57814c7ace4">
                  <head>Scope and Contents note</head>
                  <p>This talk describes the work of an army building roads as an analogy to software projects. Decision-making processes are examined from two different viewpoints. The first is the formal game theory viewpoint - making decisions in a non- deterministic, multi-stage, non-zero-sum game played with incomplete information. The second is the "army" model. From this viewpoint are discussed such issues as fighting the right war in the first place and choosing good routes to reach the goals; the need for scouts on motorcycles ("fast prototypers"); how campaigns differ, and thus affect the choice of troops; special precautions for earthquake country; getting natives to buy and drive your trucks, instead of shooting your tires out as you drive through their villages. There exist many similarities in the decision processes of formal game analysis, military planning, and project management. The talk uses the first and second to help shed light on the third.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref87_m0j" level="file">
               <did>
                  <unittitle>Modula-2, by Prof. Niklaus Wirth.</unittitle>
                  <unitid>V0058.028</unitid>
                  <unitdate normal="1983/1983" type="inclusive">1983-10-04</unitdate>
                  <physdesc id="aspace_1a67fd6bccb19c9783c446cc90230d5b">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_50b58c260fcc9ea80d04dfce52186260" type="box">5</container>
               </did>
               <scopecontent id="aspace_94b0a5e26510efa681c3a8f1201b59a8">
                  <head>Scope and Contents note</head>
                  <p>Modula-2 is a high-level programming language, coming after Pascal and Algol, which has been in use since 1979. The whole program is a module, which justifies the name of the language. One of the most useful aspects of Modula-2 is the concept of local objects which can be hidden but made to reappear. Modula-2 has greater capabilities than Pascal in its more regular syntax, procedure variables, and low-level programming abilities. Professor Wirth also discusses the powerful and versatile compiler he built in conjunction with the development of Modula-2.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref90_1m1" level="file">
               <did>
                  <unittitle>Etherphone-Ethernet Voice Service, by Dr. Lawrence C. Stewart.</unittitle>
                  <unitid>V0058.029</unitid>
                  <unitdate normal="1983/1983" type="inclusive">1983-12-07</unitdate>
                  <physdesc id="aspace_dfb1c6cfdca5447bd12005f52680a6d2">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_8a6c5beecd41f01a16414703cecdeeac" type="box">5</container>
               </did>
               <scopecontent id="aspace_e0cf40af6881bf3ee11cb83d1865f649">
                  <head>Scope and Contents note</head>
                  <p>This talk describes the architecture and initial implementation of an experimental telephone system developed by the Computer Science Laboratory at the Xerox Palo Alto Research Center. A specially designed processor (Etherphone) connects to a telephone instrument and transmits digitized voice, signally, and supervisory information in discrete packets over the Ethernet local area network. When used by itself, an Etherphone provides the functions2 of a conventional telephone, but it comes into its own when combined with the capabilities of a nearby office workstation, a voice file service, and other shared services such as databases. Most of the work so far has gone into the basic provisions for voice switching and transmission. Today the system supports ordinary telephone calls and simple voice message services. These functions will be expanded as more is learned about the integration of voice with experimental office systems.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref93_gu2" level="file">
               <did>
                  <unittitle>The Bagel: A Systolic Concurrent Prolog Machine, by Prof. Ehud Shapiro.</unittitle>
                  <unitid>V0058.030</unitid>
                  <unitdate normal="1984/1984" type="inclusive">1984-01-04</unitdate>
                  <physdesc id="aspace_71c8c1664e377c357549d6053562eee9">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_69ba96b0ece2eb82ccc26203951f58f4" type="box">5</container>
               </did>
               <scopecontent id="aspace_303c3e5fee9591985c8e93ebbdfa320b">
                  <head>Scope and Contents note</head>
                  <p>It is argued that explicit mapping of processes to processors is essential to effectively program a general-purpose parallel computer, and, as a consequence, that the kernel language of such a computer should include a process-to-processor mapping notation. The Bagel is a parallel architecture that combines concepts of dataflow, graphreduction, and systolic arrays with Turtle programs as a mapping notation. Concurrent Prolog, combined with Turtle programs, can easily implement systolic systems on the Bagel. Several systolic process structures are explored via programming examples, including linear pipes (sieve of Erasthotenes, merge sort, natural-language interface to a database), rectangular arrays (rectangular matrix multiplication, (band-matrix multiplication, dynamic programming, array relaxation), static and dynamic H-trees (divide-and-conquer, distributed database), and chaotic structures (a herd of Turtles). All programs have been debugged using the Turtle graphics Bagel simulator which is implemented in Prolog.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref96_e3v" level="file">
               <did>
                  <unittitle>A Perspective on Automatic Programming, by Dr. David R. Barstow.</unittitle>
                  <unitid>V0058.031</unitid>
                  <unitdate normal="1984/1984" type="inclusive">1984-02-07</unitdate>
                  <physdesc id="aspace_c2795d2355f293eb7ad0ea58384f8ca4">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_cb6cb855aa8b1693a8bbdb3341a46e19" type="box">5</container>
               </did>
               <scopecontent id="aspace_6503afc0debdc05a0da198efa99703f5">
                  <head>Scope and Contents note</head>
                  <p>Most work in automatic programming has focused primarily on the roles of deduction and programming knowledge. However, the role played by knowledge of the task domain seems to be at least as important, both for the usability of an automatic programming system and for the feasibility of building one that works on non-trivial problems. This perspective has evolved during the course of a variety of studies over the last several years, including detailed examination of existing software for a particular domain (quantitative interpretation of oil well logs) and the implementation of an experimental automatic programming system for that domain. The importance of domain knowledge has two important implications: a primary goal of automatic programming research should be to characterize the programming process for specific domains; and a crucial issue to be addressed in these characterizations is the interaction of domain and programming knowledge during program synthesis.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref99_r3k" level="file">
               <did>
                  <unittitle>Reduced Instruction and Fast Operand Access for General-Purpose Microprocessors, by Prof. Manolis Katevenis.</unittitle>
                  <unitid>V0058.032</unitid>
                  <unitdate normal="1984/1984" type="inclusive">1984-02-15</unitdate>
                  <physdesc id="aspace_60b03adc78720bc65d3f5dcb319eabee">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_a1f3db9a5d10cdcea5ce115c18067531" type="box">6</container>
               </did>
               <scopecontent id="aspace_58a7d452ae604e3c90976a3b938cc5ac">
                  <head>Scope and Contents note</head>
                  <p>Even in VLSI, the transistors available on the limited chip area constitute a scarce resource when used for the implementation of a complete processor or computer, and thus, they have to be used effectively. General-purpose computations consist mostly of simple operations performed on frequently accessed operands, many of which are the few local scalar variables of procedures. The recent trend in general- purpose von Neumann computer architecture towards instruction sets of increasing complexity leads to inefficient use of the scarce on-chip resources. The alternative, Reduced Instruction Set Computers (RISC), make more effective use of on-chip transistors by using them in other functional units that do support frequent operations. The RISC II processor design and implementation has investigated the architectural implications of these observations. RISC II features simple instructions (like MIPS), and a large multi-window register file whose overlapping windows are used for holding the arguments and local scalar variables of the most recently activated procedures. The RISC II single-chip processor looks different from other popular commercial processors: it has fewer total transistors; it spends only 10% of the chip area for control, rather than 112 to 2/3; it has 138 32-bit registers; and it required about five times less design and lay-out effort to get chips that work correctly and at speed on first silicon. RISC II can execute integer, high-level language programs significantly faster than other processors made in similar technologies.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref102_k1f" level="file">
               <did>
                  <unittitle>Algorithm Animation, by Prof. Robert Sedgewick</unittitle>
                  <unitid>V0058.033</unitid>
                  <unitdate normal="1984/1984" type="inclusive">1984-02-29</unitdate>
                  <physdesc id="aspace_89afabe6e38da2af0180736726046901">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_dc9e93d4f722f333e37c9fa4773dd9f8" type="box">6</container>
               </did>
               <scopecontent id="aspace_26ddf394bbf421e75abe3a28996d8de8">
                  <head>Scope and Contents note</head>
                  <p>The central thesis of this talk is that it is possible to expose fundamental characteristics of computer programs through the use of dynamic (real time) graphic displays, and that such algorithm animation has the potential to be useful in several contexts. Recent research in support of this thesis is described, including the development of a conceptual framework for the process of animation, the implementation of a software environment on high-performance graphics-based workstations supporting this activity, and the use of the system as a principal medium of communication in teaching and research. Animated numerical, sorting, searching, string processing, geometric, and graph algorithms are described and illustrated.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref105_fnb" level="file">
               <did>
                  <unittitle>Recent Progress on the Factoring Problem, by Prof. H.C. Williams.</unittitle>
                  <unitid>V0058.034</unitid>
                  <unitdate normal="1984/1984" type="inclusive">1984-03-06</unitdate>
                  <physdesc id="aspace_0476712e944975c1edfd790c9fd711e2">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_8370268f68097bfd1528a55daadb6294" type="box">6</container>
               </did>
               <scopecontent id="aspace_3c78b0dbe89561fe5bf4e9391fe22abf">
                  <head>Scope and Contents note</head>
                  <p>Given an integer N which is not prime, the problem of finding a,b&amp;gt; 1 such that N=ab is called the Factoring Problem. This problem has been studied for many centuries but the most significant progress on it has occurred only recently. New research has been stimulated by the invention of an elegant two key Cryptosystem (called RSA) which depends for its security on the presumed difficulty of the factoring problem. In this talk several methods of factoring are briefly discussed. These include some exciting new developments such as the recent implementation of the Quadratic Sieve, the development of special purpose hardware, and the proposed use of the Massively P~allel Processor. Some indication of the future progress on this problem is also given.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref108_vzc" level="file">
               <did>
                  <unittitle>Designing Programs for Foreign Environments, by Steven H. Rempell.</unittitle>
                  <unitid>V0058.035</unitid>
                  <unitdate normal="1984/1984" type="inclusive">1984-05-16</unitdate>
                  <physdesc id="aspace_c5c29255bcd320820d7d6eae764247dd">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_b70c9c9bc92464a0905e166fe693a3d8" type="box">6</container>
               </did>
               <scopecontent id="aspace_7013c0f2bd428b926d9be3dea1716d7b">
                  <head>Scope and Contents note</head>
                  <p>In order to survive in a highly competitive environment, software designers are finding it more and more imperative to take into account international requirements. This talk details many of the stumbling blocks to designing software that is translatable as well as flexible to local customs. Especially challenging are the foreign character sets. There are eleven different alphabets in Western Europe alone, each with its own keyboard arrangement, and 6000 characters of Japanese kanji. Conventions of name order, monetary systems, ad meanings of punctuation marks and symbols are a few of the other differences found between countries.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref111_fb3" level="file">
               <did>
                  <unittitle>The Design of a Capability-Based Distributed Operating System, by Prof. Andrew S. Tanenbaum.</unittitle>
                  <unitid>V0058.036</unitid>
                  <unitdate normal="1984/1984" type="inclusive">1984-05-22</unitdate>
                  <physdesc id="aspace_347357231303b059cf4c30609309affb">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_18b51c27dd5e74ec4678e1d1faffbca5" type="box">6</container>
               </did>
               <scopecontent id="aspace_2b5c0834e6200608f25c3107ed411c0d">
                  <head>Scope and Contents note</head>
                  <p>The Computer Systems Group at the Vrije Universiteit is currently engaged in constructing a highly modular distributed operating system designed to run on a collection of 680oos, 8086s, and similar machines connected by a 10 Mbps tokenpassing ring. The operating system, Amoeba, has a very small kernel that supports multiprogramming and message passing. The rest of the operating system, including the file system, (most of the) memory management, process management, resource management, and so on, runs outside the operating system as user processes. The system is based on the client-server model, using a form of cryptographically protected capabilities to implement an object-oriented system. The talk discusses the overall design of the system and its distributed environment, how capabilities are managed in a protected way by untrusted user processes, the structure of a multiserver file system supporting multiple versions of files using optimistic concurrency control, and various other conceptual and implementation issues.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref114_y5u" level="file">
               <did>
                  <unittitle>Making Smalltalk SOAR: Smalltalk on a RISC, by Prof. David A. Patterson.</unittitle>
                  <unitid>V0058.037</unitid>
                  <unitdate normal="1984/1984" type="inclusive">1984-05-23</unitdate>
                  <physdesc id="aspace_a0491b5b378fa63688063f69051c9400">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_ec7323f005875e843d58a8ec6f142064" type="box">6</container>
               </did>
               <scopecontent id="aspace_b31312a7f422a6ab448dd1e002e9f068">
                  <head>Scope and Contents note</head>
                  <p>The SOAR project is a multi-month project to build a simple, Von Neumann computer that is designed to execute the Smalltalk-80 system faster than traditional computers. The Smalltalk-80 system is a highly productive programming environment, but poses tough challenges for implementors: dynamic data typing, a high level instruction set, frequent and expensive procedure calls, and object-oriented storage management. SOAR compiles programs to a low-level, efficient instruction set. Parallel tag checks permit high performance for the simple common cases and cause traps to software routines for the complex cases. Parallel register initialization and multiple on-chip register windows speed procedure calls. Sophisticated software techniques relieve the hardware of the burden of managing objects. Initial evaluations of the effectiveness of the SOAR architecture were arrived at by compiling and simulating benchmarks, and a 35,200-transistor NMOS chip is being fabricated. The early results suggest that a Reduced Instruction Set Computer can provide high performance in an exploratory programming environment.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref117_hnr" level="file">
               <did>
                  <unittitle>The Search for Randomness, by Prof. Persi Diaconis.</unittitle>
                  <unitid>V0058.038</unitid>
                  <unitdate normal="1984/1984" type="inclusive">1984-05-29</unitdate>
                  <physdesc id="aspace_a39085d6cc387191c91b17b033893b67">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_ea1aaf9f05fcaf3d42784dae8c5848ad" type="box">7</container>
               </did>
               <scopecontent id="aspace_80bcda6b458904f460ae417f92091f93">
                  <head>Scope and Contents note</head>
                  <p>Computers simulate randomness by using simple recursive procedures such as congruential random number generators. Popular generators are surveyed along with recent work by George Marsaglia which proposes some new, simple tests which most good generators fail. These tests are sufficiently close to real world uses to give cause for alarm.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref120_c0b" level="file">
               <did>
                  <unittitle>The Human Factor: Designing Computer Systems for People, by Dr. Dick Rubinstein.</unittitle>
                  <unitid>V0058.039</unitid>
                  <unitdate normal="1984/1984" type="inclusive">1984-06-05</unitdate>
                  <physdesc id="aspace_ea6c403950cb77467fc3ab16e50cbbf3">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_99f92accd68989221c9124d5f8916b62" type="box">7</container>
               </did>
               <scopecontent id="aspace_891c4cffedf99023095710395c1b89d9">
                  <head>Scope and Contents note</head>
                  <p>What principles of human factors--and what just plain good ideas--may be applied to the design of quality user interfaces? Dr. Rubinstein advances a number of principles and ideas that can make computer systems better for all users, including examples from the V AXstation user interface.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref123_1ow" level="file">
               <did>
                  <unittitle>Designing High Performance MOS Circuits, by Mark Horowitz.</unittitle>
                  <unitid>V0058.040</unitid>
                  <unitdate normal="1984/1984" type="inclusive">1984-10-03</unitdate>
                  <physdesc id="aspace_ebb5def345354434cab4eca5e04138fc">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_6315b2605cfac026e1e6aa51c517a129" type="box">7</container>
               </did>
               <scopecontent id="aspace_1fae967fef863dd86a05ff101de17565">
                  <head>Scope and Contents note</head>
                  <p>To create a successful chip, it must not only function, but it must achieve a certain performance goal. This talk will describe some techniques used in industry to produce high performance MOS circuits, and will focus on CMOS design. The first part of the talk will review the basic issues in circuit design and point out the tradeoffs a circuit designer must make. The second part will focus on some general approaches to achieve high performance. This section will include precharge logic, domino logic, sense amplifiers, buffer sizing and others. Parts of the MIP-X processor will be used as example circuits.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref126_qys" level="file">
               <did>
                  <unittitle>Performance of Remote File Access and Processor Load Sharing In Locally Distributed Systems, by Prof. Edward D. Lazowska.</unittitle>
                  <unitid>V0058.04l</unitid>
                  <unitdate normal="1984/1984" type="inclusive">1984-10-09</unitdate>
                  <physdesc id="aspace_ee4a3eed2ebb166360eb6ef5be117132">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_ae5cdbd80cc05462f09b29b5fe54ed28" type="box">7</container>
               </did>
               <scopecontent id="aspace_18496707f4ae1e7ac9aa8d8f5f5febf1">
                  <head>Scope and Contents note</head>
                  <p>This talk describes two recent studies of design alternatives for locally distributed systems. The first study, conducted with John Zahorjan of the Univ. of Washington and David Cheriton and Willy Zwaenepoel of Stanford, considers the performance of single-user workstations that access files remotely from a shared file server. Our approach is to use the results of measurement experiments to parameterize queueing network performance models, which then are used to assess performance under load and to evaluate design alternatives. The second study, conducted jointly with Derek Eager of the Univ. of Toronto and John Zahorjan, addresses two fundamental questions about load sharing in homogeneous distributed systems: Whether the potential performance improvements can be realized in light of the overhead required, and whether system-wide state information is needed in making decisions about where to relocate work moved from a an overload node. Our approach is to use analytic models of artificial load sharing policies that optimistically and pessimistically bound the performance of realistic schemes. Our major conclusions are: load sharing results in improvements over a wide range of system loads, and so is a viable technique; very little is gained by maintaining extensive state information.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref129_g0v" level="file">
               <did>
                  <unittitle>Computation and Communication in R*: A Distributed Database Manager, by Bruce G. Lindsay.</unittitle>
                  <unitid>V0058.042</unitid>
                  <unitdate normal="1984/1984" type="inclusive">1984-10-30</unitdate>
                  <physdesc id="aspace_3cb41903dc49527d8c0e8a43d47ba397">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_6cc6a2738b8b7dca73169464b99d0e07" type="box">7</container>
               </did>
               <scopecontent id="aspace_88af9d6fe91f7b3c3c8f2a80eabf4c59">
                  <head>Scope and Contents note</head>
                  <p>This talk presents and discusses the computation and communication model used by R *, a prototype distributed database management system. An R * computation consists of a tree of processes connected by virtual circuit communication paths. The process management and communication protocols used by R * enable the system to provide reliable, distributed transactions while maintaining adequate levels of performance. Of particular interest is the use of processes in R * to retain user context from one transaction to another, in order to improve the system performance and recovery characteristics.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref132_ryf" level="file">
               <did>
                  <unittitle>A Mixed VoicelData Network, by John Wakerly.</unittitle>
                  <unitid>V0058.043</unitid>
                  <unitdate normal="1984/1984" type="inclusive">1984-10-31</unitdate>
                  <physdesc id="aspace_8793442b55f64b3e1d68841c6e356e26">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_c0043e47eff035601016d5186e07e84b" type="box">7</container>
               </did>
               <scopecontent id="aspace_c9b1f9083e4b32fe93949ac75afb6325">
                  <head>Scope and Contents note</head>
                  <p>The DAVID Information Manager carries voice, RS-232 data, and high-speed packets in a local area network using traditional telephone twisted-pair wiring in an office environment. This talk outlines the technical requirements for voice, data, and then describes the major hardware elements of the DA VID architecture. The talk includes brief descriptions of key topics in digital telephony, including pulse-code modulation, time-division multiplexing, circuit switching, and ping-pong transmission.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref135_uxb" level="file">
               <did>
                  <unittitle>The Architecture of the Convex I -a 64-Bit Affordable Supercomputer, by Steve Wallach.</unittitle>
                  <unitid>V0058.044</unitid>
                  <unitdate normal="1984/1984" type="inclusive">1984-11-07</unitdate>
                  <physdesc id="aspace_256b6bc70f729312c3b48da21ed87b1d">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_cae8bda26dadf9cfe5e2298cc0f36a6f" type="box">8</container>
               </did>
               <scopecontent id="aspace_5beb5ab83d9a4a15ad225c1a7311abf9">
                  <head>Scope and Contents note</head>
                  <p>This discussion will present the instruction set, internal register architecture, memory structure, and I/O structure of the Convex 1. There will also be a discussion on the optimizing and vectorizing FORTRAN compiler as well as the Convex version of 4.2 UNIX.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref138_wg2" level="file">
               <did>
                  <unittitle>Implementing a Cache Consistency Protocol,by Prof. Randy Katz.</unittitle>
                  <unitid>V0058.045</unitid>
                  <unitdate normal="1984/1984" type="inclusive">1984-11-20</unitdate>
                  <physdesc id="aspace_1d32537d08944d8cdb21db7c44b30173">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_83558952573a4b3e7bdc1491b0b446bd" type="box">8</container>
               </did>
               <scopecontent id="aspace_3ff32498feb7de189515fc47ef915b17">
                  <head>Scope and Contents note</head>
                  <p>We present an ownership-based multi-processor cache consistency protocol, designed for implementation by a single-chip VLSI cache controller. The protocol and its VLSI realization are described in some detail, to emphasize the important implementation issues in particular, the controller critical sections and the inter- and intra- cache interlocks needed to maintain cache consistency. The design has been carried out to layout in a p-well CMOS technology.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref141_7fd" level="file">
               <did>
                  <unittitle>A Fast Compiler for Modula-2, by Prof. Niklaus Wirth. Edited copy.</unittitle>
                  <unitid>V0058.046</unitid>
                  <unitdate normal="1985/1985" type="inclusive">1985-01-15</unitdate>
                  <physdesc id="aspace_2762f59ad4bc10eec5968ad459f1d639">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_8b4e8113353ec590c584975f37a7a215" type="box">8</container>
               </did>
               <scopecontent id="aspace_6ee7df11b4bd22239d9638bda4a6703a">
                  <head>Scope and Contents note</head>
                  <p>One-pass compilations has the advantage of being considerably faster than many-pass compilation, because it avoids the generations, storage, retrieval, and analysis of interpass codes On the other hand, it requires a relatively large main store. Since nowadays even "small" computers tend to have a considerable amount of memory, onepass compilers regain significance. We compare a new Modula-2 compiler with existing ones and describe its main structure. In particular, also some problems and their solution connected with separate compilation are discussed.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref144_44t" level="file">
               <did>
                  <unittitle>The Potential State of Computer and Information Technology in the Year 2000, by Prof. Stephen Lundstrom. Edited copy.</unittitle>
                  <unitid>V0058.047</unitid>
                  <unitdate normal="1985/1985" type="inclusive">1985-01-23</unitdate>
                  <physdesc id="aspace_07fb245a884f6f6f438163b2f77dbfc0">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_ba284b3258ee940fedfd7c8b3c9beb27" type="box">8</container>
               </did>
               <scopecontent id="aspace_e8a2a56fdf3bea79cd5a5f9f301ca385">
                  <head>Scope and Contents note</head>
                  <p>At the request of NASA, the Aeronautics and Space Engineering Board (ASEB) of the National Academy of Science convened a workshop to assess the aeronautics technology possibilities by the year 2000. This workshop included panels to consider future aircraft system concepts, as well as the supporting disciplines of structures, aerodynamics, propulsion, human factors, materials, and guidance, navigation, and control. Since all of these disciplines are, or will be, highly dependent on advanced computer and information technology, a separate panel was convened to consider this area. The information presented in this talk is the result of the joint deliberations of the group of industry, university, and government experts from a wide range of areas who worked on the panel. The objective of these deliberations was to project what computer and information technology would be possible by the year 2000 if sufficient resources are made available. While the collective panel assembled had a very broad background, the conclusions reached were not unanimous, especially regarding the extent which various disciplines would be capable of progressing over this time frame. Undoubtedly, new research areas, unknown to the panelists, will emerge during this time frame. The projections given in the report are the honest options of most of the group assembled and while they cannot be supported with any quantitative analyses, they do represent an outlook to the future which is as realistic as possible. The topics considered by the panel, and reported in this talk, include: Microelectronics and Components, Processors (including scientific supercomputers and airborne distributed systems), Software, Artificial Intelligence and Expert Systems, ManMachine Interfaces, Systems Development and Implementation, and High Integrity Systems.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref147_w3w" level="file">
               <did>
                  <unittitle>Knowledge Based Software Development in FSD, by Prof. Robert Balzer. Edited copy.</unittitle>
                  <unitid>V0058.048</unitid>
                  <unitdate normal="1985/1985" type="inclusive">1985-02-25</unitdate>
                  <physdesc id="aspace_b08bf4551de974dbe0fc96155c39f541">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_22a51a6110eb8dcce86a6f123baec8ef" type="box">8</container>
               </did>
               <scopecontent id="aspace_06edb3293bf3b462b45a05a9f85639cb">
                  <head>Scope and Contents note</head>
                  <p>Our group is pursuing the goal of an automation based software development paradigm. While this goal is still distant, we have embedded our current perceptions and capabilities in a prototype (FSD) of such a software development Although this prototype was built primarily as a testbed for our ideas, we decided to gain insight by using it, and have added some administrative services to expand it from a programming system to a computing environment currently being used by a few lSI researchers for all their computing activities. This "AI operating System" provides specification capabilities for Search, Coordination, Automation, Evolution, and Inter-User Interaction. Particularly important is evolution, as we recognize that useful systems can only arise, and remain viable, through continued evolution. Much of our research is focused on this issue and several examples will be used to characterize where we are today and where we are headed. Naturally, we have started to use these facilities to evolve our system.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref150_zpd" level="file">
               <did>
                  <unittitle>The USC Expert Synthesis System, by Prof. Alice Parker. Edited copy.</unittitle>
                  <unitid>V0058.049</unitid>
                  <unitdate normal="1985/1985" type="inclusive">1985-03-06</unitdate>
                  <physdesc id="aspace_014b4be84ac258fc19cc3494597de4c1">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_9a415b6254e34eb6cf663e1062d5e0d5" type="box">8</container>
               </did>
               <scopecontent id="aspace_4caa607795ca81c7b6a069466d0a266c">
                  <head>Scope and Contents note</head>
                  <p>This talk presents a brief overview of the USC Expert Synthesis System, which is part of the ADAM (Advanced Design AutoMation) project. This system supports interactive specification of digital system design problems, and provides a framework for both interactive and automatic design synthesis of digital integrated circuits from specifications of the black box behavior Topics covered include the overall system structure, the representation of design information, and two specific synthesis problems -- the synthesis/verification of data path designs and the synthesis of clocking schemes. In addition, abstract system specification is covered briefly.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref153_4du" level="file">
               <did>
                  <unittitle>The Theory and Application of Non-First-Normal-Form Relations, by Prof. Henry Korth. Edited copy.</unittitle>
                  <unitid>V0058.050</unitid>
                  <unitdate normal="1985/1985" type="inclusive">1985-03-12</unitdate>
                  <physdesc id="aspace_a77a685f4dd1e59f9682709d48f696f9">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_7efc6a57033fb52e59a0951067c37da3" type="box">9</container>
               </did>
               <scopecontent id="aspace_463f847852ef6b32e676a52cb0578584">
                  <head>Scope and Contents note</head>
                  <p>In this talk, we present a formal model for the study of non- INF relational databases. A formal relational calculus is defined and this calculus is proved equivalent to an extension of the standard relational algebra. We define a new normal form for nonINF relations and define several new algebraic operators that preserve this normal form. In the ROSI (Relational Operating System Interface) project at the University of Texas, we are using our model of non-lNF relations to construct a relational user interface to an operating system environment. The ROSI query languages currently being designed include an extended version of SQL for non-lNF relations, and a graphical query language based on an extension to universal-relation languages. In this talk, we present a preliminary design of these languages.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref156_bsx" level="file">
               <did>
                  <unittitle>The Status. Trends and Challenges in Information Storage Technology, by Prof. A.S. Hoagland. Edited Copy.</unittitle>
                  <unitid>V0058.051</unitid>
                  <unitdate normal="1985/1985" type="inclusive">1985-03-13</unitdate>
                  <physdesc id="aspace_6b2daafe26ebb650b7eca87a4f8ecb1f">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_d6f54d8e72f65cdb5f0266618a1474f0" type="box">9</container>
               </did>
               <scopecontent id="aspace_1c471b4e63fb06c1e9fb58b3fc800580">
                  <head>Scope and Contents note</head>
                  <p>Magnetic recording has played the predominant role in meeting the growing needs for data storage for over 30 years, and during this period storage density consistently has doubled about every two years. Yet we are just now witnessing an explosive growth in the application of this technology for the storage of information, and technological advances are beginning to accelerate. At the same time, optical storage is just beginning to be introduced in commercial storage devices at much higher densities than currently available. However, density itself may be of much less significance in the long term than functional features related to usage. The evolution of information of storage technologies and devices will be traced and their future prospects will be discussed. The potential competitive and complementary roles of magnetic and optical storage will be related to emerging applications. This talk is a quick overview of a subject which is to be covered in a much more extensive and comprehensive form in a series of videotapes being prepared by the Institute for Information Storage Technology at the University of Santa Clara that are to be made generally available to industry</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref159_aj2" level="file">
               <did>
                  <unittitle>On the Sequential Nature of Unification, by Prof. Cynthia Dwork.</unittitle>
                  <unitid>V0058.052</unitid>
                  <unitdate normal="1985/1985" type="inclusive">1985-04-09</unitdate>
                  <physdesc id="aspace_d21013f87386459c5643c6b94c5806b8">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_81958d9900a53286d91f3a93e97310a2" type="box">9</container>
               </did>
               <scopecontent id="aspace_da6913aa45199965d2e79c46a2efb871">
                  <head>Scope and Contents note</head>
                  <p>Unification of terms is a crucial step in resolution theorem proving, with applications to a variety of symbolic computation problems. It will be shown that the general problem is log-space complete for P, even if infinite substitutions are allowed. Thus a fast parallel algorithm for unification is unlikely. More positively, term matching, an important subcase of unification, will be shown to have a parallel algorithm requiring a number of processors polynomial in n, the size of the input, and running in time polylogarithmic in n. This talk assumes no familiarity with unification or its applications</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref162_j7u" level="file">
               <did>
                  <unittitle>Graphics for User Interfaces, by Prof. Vaughan Pratt.</unittitle>
                  <unitid>V0058.053</unitid>
                  <unitdate normal="1985/1985" type="inclusive">1985-04-16</unitdate>
                  <physdesc id="aspace_702dc81a909f17f082d4f441c92177d9">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_e1a44350385e891250d084bf06680113" type="box">9</container>
               </did>
               <scopecontent id="aspace_f9d9d6c4b6b3ab4adfe166c6e5567f2c">
                  <head>Scope and Contents note</head>
                  <p>Responsive user interfaces need high performance high quality graphics support. I shall describe recent research at Sun addressing the graphics needs of text, splines, and windows.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref165_uuw" level="file">
               <did>
                  <unittitle>The GEM Programming EnvironmentlUser Interface, by Timothy Oren. Edited master; Umatic dub." "</unittitle>
                  <unitid>V0058.054</unitid>
                  <unitdate normal="1985/1985" type="inclusive">1985-04-24</unitdate>
                  <physdesc id="aspace_590f6f82e4d34718f05c21db1979dc2e">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_ca1d74b3407b4f21f4469993e32e5a55" type="box">9</container>
               </did>
               <scopecontent id="aspace_ee343a13461fa22708801bd42a178b92">
                  <head>Scope and Contents note</head>
                  <p>GEM (Graphics Environment Manager), a program created at Digital Research, Incorporated, brings the familiar menu/ icon! windowing environment of the Xerox star to the IBM PC, the Atari ST series, and other personal computers. Unlike other environments of this type, GEM provides a large degree of source code compatibility between different machines and machine configurations, allowing applications to be ported with relatively little effort.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref168_2s5" level="file">
               <did>
                  <unittitle>Statistical Mechanics of Concurrency, by Prof. Yechiam Yemini.</unittitle>
                  <unitid>V0058.055</unitid>
                  <unitdate normal="1985/1985" type="inclusive">1985-05-07</unitdate>
                  <physdesc id="aspace_6e0c91ca0a53fccddd45500c5ba5f084">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_70b54f070bc07c7908086bc7ea293dfe" type="box">9</container>
               </did>
               <scopecontent id="aspace_dcdf50760e972189fbb956bf439cedcd">
                  <head>Scope and Contents note</head>
                  <p>Consider a set of agents involved in a concurrent access to a shared distributed resource. Sharing is subject to interference constraints that define the set of admissible configurations of concurrent activities. Examples of such interference systems include transactions sharing a database, packet transmissions sharing the ether in a packet radio network and interprocessor communications sharing a switching network. The performance behavior of such systems has resisted traditional analysis techniques. I will present a statistical mechanics approach to the analysis of interference systems. This approach facilitates solutions of complex distributed systems, offers physical insights to their behavior and potentially useful tools in their design using physical performance measures (e.g., "pressure" of a data base), and provides access to a wide body of methods of physics to solve such systems.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref171_7h8" level="file">
               <did>
                  <unittitle>Postscript, by Prof. Brian K. Reid. Edited Master.</unittitle>
                  <unitid>V0058.056</unitid>
                  <unitdate normal="1985/1985" type="inclusive">1985-05-22</unitdate>
                  <physdesc id="aspace_8716987f39e210563b8b14fd93bbd098">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_8090656a06ba85e5000755f7de59e60b" type="box">10</container>
               </did>
               <scopecontent id="aspace_4bec8682b632142feed7ba8e3d18929c">
                  <head>Scope and Contents note</head>
                  <p>PostScript is an executable language for the description of graphical images. It was developed by a local company, Adobe Systems, and is implemented in several commercially-available laser printers and phototypesetters.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref174_v4u" level="file">
               <did>
                  <unittitle>Transparency in Distributed Operating Systems, by Prof. Gerald 1. Popek. Edited master.</unittitle>
                  <unitid>V0058.057</unitid>
                  <unitdate normal="1985/1985" type="inclusive">1985-06-05</unitdate>
                  <physdesc id="aspace_12dbb38879e3ca7d0eba24af4ac1b67c">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_a9d042c528de8b9ada19a1caf6b64e77" type="box">10</container>
               </did>
               <scopecontent id="aspace_a2481295ff3306a1186f229955b84a4b">
                  <head>Scope and Contents note</head>
                  <p>invisible, to both people and programs. Access to all resources, bey they data, tasks, devices, services, etc. is the same, independent of the location of the requestor or the resource. This concept is akin to the manner by which virtual memory in operating systems hides the distinction between main and secondary storage, or the way data independence in database systems separates the means of information access from access paths, storage structures, etc. Denning argues that transparency is an important, fundamental design principle. Consider a distributed computing environment composed of thousands of computing nodes (workstations, mainframes, etc.), with perhaps different processor types, and even different operating systems in some cases. Is it feasible to provide a high level of transparency? Is it desirable? These issues will be raised, resulting architectural and design problems outlined, and the current state of their solutions in the Locus distributed operating system family discussed. Some of the problems include name service in a very large scale system, CPU and data type heterogeneity, and integration of foreign operating systems.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref177_0gx" level="file">
               <did>
                  <unittitle>Belief. Awareness, and Limited Reasoning, by Dr. Joe Halpern. Edited master.</unittitle>
                  <unitid>V0058.058</unitid>
                  <unitdate normal="1985/1985" type="inclusive">1985-10-01</unitdate>
                  <physdesc id="aspace_7d950a38a2ce7fdac42ba5a3888b4b48">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_20001bea59651c19d8e56f8056bb3a7d" type="box">10</container>
               </did>
               <scopecontent id="aspace_0687a1bd222a7ec60fae2755f180090b">
                  <head>Scope and Contents note</head>
                  <p>Classical possible-worlds models for knowledge and belief suffer from the problem of logical omniscience: agents know all tautologies and their knowledge is closed under logical consequence. This unfortunately is not a very accurate account of how people operate! We review possible-worlds semantics, and then go on to introduce three approaches towards solving the problem of logical omniscience. In particular, in our logics, the set of beliefs of an agent does not necessarily contain all valid formulas. One of our logics deals explicitly with awareness, where, roughly speaking, it is necessary to be aware of a concept before one can have beliefs about it. Another gives a model of local reasoning, where an agent is viewed as a society of minds, each with its own cluster of beliefs, which may contradict each other. The talk with be completely self-contained.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref180_ala" level="file">
               <did>
                  <unittitle>Challenges and Directions in Fault-Tolerant Computing, by Dr. Jack Goldberg. Edited master.</unittitle>
                  <unitid>V0058.059</unitid>
                  <unitdate normal="1985/1985" type="inclusive">1985-10-02</unitdate>
                  <physdesc id="aspace_4555a935b0e957f02e72a2789fd94ce7">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_1ace7c33f6da2ff2223f7d9d5daeb151" type="box">10</container>
               </did>
               <scopecontent id="aspace_06c8b8cf907f63be80b8bae0298261df">
                  <head>Scope and Contents note</head>
                  <p>Two decades of theoretical and experimental work and numerous recent successful applications have established fault tolerance as a standard objective in computer system design. As with the objective of correctness, and in contrast to the objective of high speed, satisfaction of fault tolerance requirements cannot be demonstrated by testing alone, but requires formal analysis. Most of the work in fault tolerance has been concerned with developing effective design techniques. Recent work on reliability modeling and formal proof of fault tolerant design and implementation is laying a foundation for a more rigorous design discipline. The scope of concern has also expanded to include any source of computer reliability, such as design mistakes, in software, hardware, or at any system level. Current art is barely able to keep up with the rapid pace of computer technology, the stresses of new applications and the new expansion in scope of concerns. Particular challenges lie in coping with imperfections of the ultrasmall, i.e., high-density VLSI, and the ultra-large, i.e., large software systems. It is clear that fault tolerance cannot be "added" to a design and must be integrated with other design objectives. Simultaneous demands in future systems for high performance, high security, high evolvability and high fault tolerance will require new theoretical models of computer systems and a much closer integration of practical design techniques. The talk will discuss the widening scope of research into computer dependability. New issues include tolerance of design errors (including software), operator errors, and the safety of computer-controlled systems.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref183_uio" level="file">
               <did>
                  <unittitle>Common Loops--A Graceful Merger of Lisp and Object Oriented Programming, by Dr. Daniel G. Bobrow. Edited master.</unittitle>
                  <unitid>V0058.060</unitid>
                  <unitdate normal="1985/1985" type="inclusive">1985-11-06</unitdate>
                  <physdesc id="aspace_d4d8dd8fa03d721c0e276cf0c28db95b">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_f7ff85e4f7083be42a8b636bc0347125" type="box">10</container>
               </did>
               <scopecontent id="aspace_d281fe657c627f8a18a5325642701cdf">
                  <head>Scope and Contents note</head>
                  <p>CommonLoops merges the facilities of object oriented programming and Lisp. This talk will briefly describe the relevant features of the two styles of programming, and describe the unique properties of this merge. These include a uniform syntax for function calling and sending messages; amerger of the type space of Lisp and the class hierarchy of objects; a generalization of method specification that includes ordinary Lisp functions at one extreme, and fully type specified functions at the other; and a "metaclass" mechanism that allows tradeoffs between early binding and ease of exploratory programming in the implementation of objects.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref186_ty0" level="file">
               <did>
                  <unittitle>Perceptual Organization and the Representation of Natural Form, by Dr. Alex P. Pentland. Edited master.</unittitle>
                  <unitid>V0058.061</unitid>
                  <unitdate normal="1985/1985" type="inclusive">1985-11-19</unitdate>
                  <physdesc id="aspace_d59482b4219fe18dec4f6d523dd29fe9">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_aecf0b29e50c679a5234a29ca616b1d8" type="box">10</container>
               </did>
               <scopecontent id="aspace_530e3ba7c51ce26e602989d2f56634de">
                  <head>Scope and Contents note</head>
                  <p>To understand both perception and commonsense reasoning we need a representation that captures important physical regularities and that correctly describes the people's perceptual organization of the stimulus. Unfortunately, the current representations were originally developed for other purposes (e.g., physics, engineering) and are therefore often unsuitable. We have developed a new representation and used it to make accurate descriptions of an extensive variety of natural forms including people, mountains, clouds and trees. The descriptions are amazingly compact. The approach of this representation is to describe scene structure in a manner similar to people's notion of "a part," suing descriptions that reflect a possible formative history of the object, e.g., how the object might have been constructed from lumps of clay. For this representation to be useful it must be possible to recover such descriptions from image data; we show that the primitive elements of such descriptions may be recovered in an overconstrained and therefore reliable manner. An interactive "real time" 3-D graphics modeling system based on this representation will be shown, together with short animated sequences demonstrating the descriptive power of the representation.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref189_0vd" level="file">
               <did>
                  <unittitle>A Knowledge-Based Approach to High-Level Program Optimization, by Prof. Allen Goldberg.</unittitle>
                  <unitid>V0058.062</unitid>
                  <unitdate normal="1985/1985" type="inclusive">1985-12-10</unitdate>
                  <physdesc id="aspace_7b624ac7d017511de3929b29d78504af">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_153ee005acab9d6885ec90a50900fb8c" type="box">11</container>
               </did>
               <scopecontent id="aspace_e3a78a3b7297ce9e17ed13547d8d1df4">
                  <head>Scope and Contents note</head>
                  <p>Our concern is the compilation of high-level declarative programs into efficient Pascallevel implementations. Specifications are written as equational assertions over a settheoretic data domain. Compilation is achieved by semi-automatic application of source-to-source transformations. These transformations formalize knowledge about high-level optimization techniques required for the task. These techniques include finite differencing, loop fusion, algebraic simplification, symbolic evaluation, data structure selection, and store-vs-compute. The relevance of this work to the optimization of Prolog and functional programs will be discussed.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref192_8cs" level="file">
               <did>
                  <unittitle>The GF11 Supercomputer, by Dr. John F. Beetem. Edited master.</unittitle>
                  <unitid>V0058.063</unitid>
                  <unitdate normal="1986/1986" type="inclusive">1986-01-21</unitdate>
                  <physdesc id="aspace_8b0184a8b79b843f6c0fdf888c7e1112">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_cab443d67a84d768a4c3141b753ef548" type="box">11</container>
               </did>
               <scopecontent id="aspace_937095a97ab332a93aedca9bd2db5017">
                  <head>Scope and Contents note</head>
                  <p>GF11 is a parallel computer currently under construction at the IBM Yorktown Research Center. The machine incorporates 576 floating-point processors arranged in a modified SIMD architecture. Each processor has space for 3 Mbytes of memory and is capable of 20 Mflops, giving the total machine a peak of 1.125 Gbytes of memory and 11 .52 Gflops. The processors are interconnected by a dynamically reconfigurable non-blocking switching network. At each machine cycle, any of 1024 pre- selected permutations of data can be realized among the processors. The main intended application of GF11 is a class of calculations arising from quantum chromodynamics, a proposed theory of the elementary particles which participate in nuclear interactions.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref195_6ay" level="file">
               <did>
                  <unittitle>Technology Trends of CMOS VLSI, Dr. Y oshio Nishi.</unittitle>
                  <unitid>V0058.064</unitid>
                  <unitdate normal="1986/1986" type="inclusive">1986-01-22</unitdate>
                  <physdesc id="aspace_642cd116dfae22b00ea349d3c90b063c">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_5ed896deaab3f01a2bc7624e496dab47" type="box">11</container>
               </did>
               <scopecontent id="aspace_79cf4ba77aa9acc7e2b6504fca874418">
                  <head>Scope and Contents note</head>
                  <p>As a mainstream technology for the VLSI!ULSI era, CMOS technology has attracted increasing attention and absorbs a tremendous amount of R&amp;D resources. This seminar will cover the historical background of CMOS technology, recent progress in VLSI CMOS technology, and application of CMOS technology to the latest VLSI devices. Also discussed will be several topics in device physics and fabrication process technology for submicron CMOS.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref198_tp1" level="file">
               <did>
                  <unittitle>Juno, A Constraint-Based Graphics System, by Dr. Greg Nelson. Edited master.</unittitle>
                  <unitid>V0058.065</unitid>
                  <unitdate normal="1986/1986" type="inclusive">1986-02-04</unitdate>
                  <physdesc id="aspace_8005f5ea31ef0547cee10ca78fe18a15">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_48d18d85a60a831541ba72664d5fbe14" type="box">11</container>
               </did>
               <scopecontent id="aspace_cee59834648781541d5e2180a3507395">
                  <head>Scope and Contents note</head>
                  <p>Juno is a system that harmoniously integrates a language for describing computer graphics images with a what-you-see-is- what-you-get image editor. Two of Juno's novelties are that geometric constraints are used to specify locations, and that the text of a Juno program is modified in response to the interactive editing of the displayed image that the program produces. A videotape of the program will be shown; the research was done at Xerox P ARC.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref201_3wt" level="file">
               <did>
                  <unittitle>Sprite OS, by Prof. John Ousterhout. Edited Master.</unittitle>
                  <unitid>V0058.066</unitid>
                  <unitdate normal="1986/1986" type="inclusive">1986-02-12</unitdate>
                  <physdesc id="aspace_9181de808286eaa222f59767f0737ba4">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_9692583ba866b5f9a2d039d6775bbf68" type="box">11</container>
               </did>
               <scopecontent id="aspace_266c281de841671dcaec0033eb57b13f">
                  <head>Scope and Contents note</head>
                  <p>Sprite is a new network operating system being built at Berkeley as part of the SPUR workstation project. The talk will focus on three parts of Sprite: the filesystem, process offloading, and the virtual memory system. The filesystem will provide a single shared Unix-like file hierarchy distributed across several servers. Clients will use dynamically-constructed prefix tables to associate file names with servers. Sprite will include a process offloading mechanism that allows jobs to be run on idle workstations in the same way that jobs may be placed in background in Unix. The virtual memory system will be Unix-like with simple extensions to permit shared data segments and synchronization.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref204_u0g" level="file">
               <did>
                  <unittitle>Lattices and Algorithms, by Prof. Laszlo Lovasz. Edited master.</unittitle>
                  <unitid>V0058.067</unitid>
                  <unitdate normal="1986/1986" type="inclusive">1986-02-18</unitdate>
                  <physdesc id="aspace_2cfca6b55883b273aefc1da7663831c8">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_1b3f7e6b08a5b96e827f76d88f1dfaab" type="box">11</container>
               </did>
               <scopecontent id="aspace_a2a3ed4261d24e00df3e646b862a215b">
                  <head>Scope and Contents note</head>
                  <p>Given a lattice L in the n-dimensional space, we may ask several questions like "Which is the shortest non-zero vector in L?", "Which point of L is closest to a given point in the space?", etc. Many classical results in the "Geometry of Numbers" deal with these questions from a non-algorithmic point of view. However, algorithmic aspects of them only recently became objects of extensive study, to a large extent because of their applications in algebra, cryptography, combinatorial optimization, prime number theory, etc. Moreover, renewed interest in this field has resulted in substantial improvements of classical results.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref207_07q" level="file">
               <did>
                  <unittitle>Man Dies due to Poor Man-Machine Interface Design, by Chuck Clanton. Edited Master.</unittitle>
                  <unitid>V0058.068</unitid>
                  <unitdate normal="1986/1986" type="inclusive">1986-02-19</unitdate>
                  <physdesc id="aspace_67e5f7a6c2389fdc1b9f9156944f43c8">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_b283e4efe16a2ed3454ba4e9599e2c6a" type="box">12</container>
               </did>
               <scopecontent id="aspace_64ca639373e26c073ba04fe497ec1cca">
                  <head>Scope and Contents note</head>
                  <p>Few dispute that interactions between computers and users requires thoughtful attention. Is this a communication of craft or idiosyncrasies of personal taste? Placebo effects and fundamental principles are difficult to distinguish. This talk recounts some of the inadequately controlled and poorly validated experiments by the speaker which lend insights into the current state of the art.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref210_wv7" level="file">
               <did>
                  <unittitle>Cache Memories, by Alan Smith. Master.</unittitle>
                  <unitid>V0058.069</unitid>
                  <unitdate normal="1986/1986" type="inclusive">1986-04-02</unitdate>
                  <physdesc id="aspace_348b983d6febe1b553487390c25fb5bc">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_a99e099898bb3567df8717a0261f92cc" type="box">12</container>
               </did>
               <scopecontent id="aspace_7e3d9af7c9239dccf0ff746793f894c8">
                  <head>Scope and Contents note</head>
                  <p>Cache memories are used in almost all large and medium size computers in order to reduce the average main memory access time. Cache memories are also in use with, or being built for (or on), high performance microprocessors. In this talk, we provide an overview of the issues in cache memory design, concentrating on some recent work by the speaker. Particular attention is given to cache workloads, cache consistency mechanisms, and the miss ratio as a function of line size and cache size. Other topic may include: cache fetch algorithms (demand vs. prefetch), placement (set associative, direct mapping, etc.) and replacement (LRU, FIFO, etc.) algorithms, store through vs. copy back updating of main memory, cold start vs. warm start miss ratios, the effect of input/output through the cache, virtual address caches, user/supervisor caches, multilevel cache, the behavior of split instruction! data caches, and translation lookaside buffers</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref213_e7p" level="file">
               <did>
                  <unittitle>Complexity Theoretic Aspects of Linear Programming, by Steven Smale. Master.</unittitle>
                  <unitid>V0058.070</unitid>
                  <unitdate normal="1986/1986" type="inclusive">1986-04-29</unitdate>
                  <physdesc id="aspace_ae68a1e1a0ac03a92ee24e0f1c9e6e88">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_1fc2e9dec08176a7c9efdfc2120cdf55" type="box">12</container>
               </did>
               <scopecontent id="aspace_380eecacba85d9732935be55df32e9e6">
                  <head>Scope and Contents note</head>
                  <p>An exposition of some results on the speed of basic linear programming complementarity problems. Some relationship to Newton's method are also being developed</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref216_o35" level="file">
               <did>
                  <unittitle>The H-P Precision Architecture, by Jerry Huck. Master.</unittitle>
                  <unitid>V0058.071</unitid>
                  <unitdate normal="1986/1986" type="inclusive">1986-04-30</unitdate>
                  <physdesc id="aspace_058e176ac3da1810b7dd7f5be552841e">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_575d8ec9af3abc1ae7924d738694f2b7" type="box">12</container>
               </did>
               <scopecontent id="aspace_d7f771e3a6be8ac71a622352597cb0a3">
                  <head>Scope and Contents note</head>
                  <p>HP's Spectrum Program has defined and is implementing a completely new family of computer systems using a RISC based architecture. This talk focuses on the processor organization to examine CPU resources, instruction set, and storage organization. Started by a small research group at HP's central labs, the concepts of RISC computer design were applied to a new architecture suitable for both commercial and technical applications. The architecture adheres to the basic tenet: "Make the most frequent functions go as fast as possible." Compiler writers, operating systems experts, and hardware designers iterated through a proposal-paper design cycle to optimize an architecture for maximum throughput. The first member of the family has been announced and the presentation discusses the organization and implementation of its CPU.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref219_tlo" level="file">
               <did>
                  <unittitle>Synthesizing Realistic Textures by the Composition of Perceptually Motivated Functions and Programming Language Design, by Ken Perlin. Master.</unittitle>
                  <unitid>V0058.072</unitid>
                  <unitdate normal="1986/1986" type="inclusive">1986-05-06</unitdate>
                  <physdesc id="aspace_a53b403d3fcceb0449178595bd85d902">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_753f7216e9f21ca957867029f1beca3b" type="box">12</container>
               </did>
               <scopecontent id="aspace_cb9a5f371f4c2c61bcdebd6893e5755f">
                  <head>Scope and Contents note</head>
                  <p>This research demonstrates a uniform functional composition framework for modeling and synthesizing complex textures. The appearance of a wide range of natural phenomena can be expressed and efficiently synthesized in this framework. Animation of texture is readily incorporated. Emphasis will be on explaining the properties leading to generality, expressivity, and efficiency. A system is described in which an image is approximated by a finite collection of .B samples, representing neighborhoods in the image. The user designs visual simulations of surface textures by constructing an algorithm that is to be independently computed at each image sample. Primitive functions are provided to allow control within the texture algorithm of such visually important texture properties as frequency and first order spatial statistics. The user proceeds by building from these functions. Feedback is provided by images indicating the state of any computed quantity over all samples. The system includes primitive functions that facilitate the manipulation of such visually discriminable qualities as brightness, contrast, coherent discontinuities, orientation, and features possessing restricted ranges of frequency. These primitive functions are used to build up composite functions that facilitate the manipulation of more sophisticated visual qualities. The system is applied to build the appearance of such textures as water, star fields, flame, marble, clouds, stucco, rock, smoke, and soap films. Major results are twofold. First I will show that a wide range of naturalistic visual textures can be constructed with this approach. Second, I will demonstrate specific functions that encode visual elements common to disparate visual textures.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref222_t4i" level="file">
               <did>
                  <unittitle>The NCUBE Family of Parallel Supercomputers, by John Palmer.</unittitle>
                  <unitid>V0058.073</unitid>
                  <unitdate normal="1986/1986" type="inclusive">1986-05-14</unitdate>
                  <physdesc id="aspace_0f909e9649614a9ce0d4830aa0de1dcc">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_936fc52aece7e8871027398a261a4a48" type="box">12</container>
               </did>
               <scopecontent id="aspace_8e98fe6f8c3c41f556d9ed1b279f02a3">
                  <head>Scope and Contents note</head>
                  <p>NCUBE has developed a family of parallel computer systems based on a proprietary VLSI process that was designed specifi- cally for parallel computing. The NCUBE systems range from 8 MIPS (2 mflops) for a 4-node board to 2000 MIPS (500 rnfIops) in a 1,024 processor system. There are three versions of the NCUBE system: NCUBE/4: a 4-node board that plugs into an IBM PC-AT; NCUBEI7: an office environment system up to 128 nodes; NCUBEIlO: a true supercomputer with up to 1,024 nodes. In addition to high computational performance, the NCUBE family has a unique high performance I/O system. the I/O system is expandable from 1-8 channels each of which is capable of 180 mbytes/sec transfer rate. This allows for very high performance graphics support and parallel disk interfaces. The NCUBE family along with its software support is covered in the presentation. Also a COMPAQ with an NCUBE/4 is used in demonstration</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref225_7qh" level="file">
               <did>
                  <unittitle>Nanocomputers and Molecular Engineering, by K. Eric Drexler.</unittitle>
                  <unitid>V0058.074</unitid>
                  <unitdate normal="1986/1986" type="inclusive">1986-10-21</unitdate>
                  <physdesc id="aspace_4c1c7f11870387aec311c3be39562fac">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_f1cf3559f778f397423c2f97742a2979" type="box">13</container>
               </did>
               <scopecontent id="aspace_fba4f8bdcaefd63c496f5a3b52d7605f">
                  <head>Scope and Contents note</head>
                  <p>The broad outlines of future technology will be set by the limits of physical law , if we can develop means for approaching those limits. Today, because we cannot directly manipulate the atomic building blocks of matter, we can make no more than a tiny fraction of the physical structures permitted by natural law. But advances in biotechnology and computational chemistry are opening a path to the development of molecular assemblers able to build objects to complex atomic specifications, removing this constraint and making possible dramatic advances in many fields. Among these advances will be nanocomputers with parts of molecular size. Mechanical nanocomputers--molecular Babbage machines--are amenable to design and analysis with available techniques: this technology promises sub-micron computers with gigahertz clock rates, nanowatt power dissipation, and RAM storage densities in the hundreds of millions of terabits per cubic centimeter</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref228_dkp" level="file">
               <did>
                  <unittitle>Architectural Innovations in the AT&amp;T CRISP Microprocessor, by David Ditzel.</unittitle>
                  <unitid>V0058.075</unitid>
                  <unitdate normal="1987/1987" type="inclusive">1987-03-04</unitdate>
                  <physdesc id="aspace_ca443b73c462035d7de4d4597cbf6fe1">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_e4ebc04c352d61d6b96b638354064285" type="box">13</container>
               </did>
               <scopecontent id="aspace_b982a4482e83df4dd7e7da8cfca2b0ea">
                  <head>Scope and Contents note</head>
                  <p>The AT&amp;T CRISP Microprocessor is a high performance C Machine. CRISP is a general purpose single chip 32-bit processor containing 172,163 transistors. The instructions-set architecture is that of a registerless 2 112 address memory-to-memory machine with a small number of instructions and addressing modes. The CRISP instruction-set is relatively independent of any particular implementation. High performance is achieved by pipelining, caches, an efficient instruction-set, and several new architectural techniques. A 128-byte on-chip stack cache provides automatic register allocation in hardware. Branch folding allows branch instructions to execute in zero time. This talk describes some of the more innovative aspects of CRISP's hardware architecture</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref231_fbc" level="file">
               <did>
                  <unittitle>Updating Deductive Databases in Logic, by David Scott Warren.</unittitle>
                  <unitid>V0058.076</unitid>
                  <unitdate normal="1987/1987" type="inclusive">1987-03-10</unitdate>
                  <physdesc id="aspace_e5ea22c5da19ebe0917aa6e1a7edf934">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_8119242956a1cc000d904a95ba90e9ad" type="box">13</container>
               </did>
               <scopecontent id="aspace_804be1dd6a4dcf3a226281885c4b183f">
                  <head>Scope and Contents note</head>
                  <p>Prolog adds a notion of procedurality to Horn clause logic by using a particular proof procedure, SLD resolution. Global state changes are effected in Prolog as side-effects of this proof procedure, and as a result can only be understood in a very syntactic way. We have developed a theory, based on modal logic, that adds procedurality to Horn clause logic in a more semantic way. This theory is applied to the problem of updating deductive databases, and results in a declarative semantics for database transactions. We show connections to a logical notion of null values and database triggers. We show how some transactions that update database views can be understood as statements in a particularly simple and elegant dynamic logic. We describe the current state of an implementation of a prototype concurrent, distributed, deductive database with an update language based on this logic.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref234_2dg" level="file">
               <did>
                  <unittitle>Software Standards and Hardware Advances: The Driving Forces for Open Systems, by Andy Bechtolsheim.</unittitle>
                  <unitid>V0058.077</unitid>
                  <unitdate normal="1987/1987" type="inclusive">1987-03-11</unitdate>
                  <physdesc id="aspace_b7d3728801400bd3adf08e4498c977bf">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_f1c6c34e16ebe8287c27e4c064d96f65" type="box">13</container>
               </did>
               <scopecontent id="aspace_d8cb0bc897b9acf50300e0548bcb9c86">
                  <head>Scope and Contents note</head>
                  <p>This talk discusses the advances in workstation technology which have occurred over the last five years and which have enabled us to build open systems interconnecting a wide range of computer equipment. We will cover the role of operating systems, networking, windowsystems, and graphics technology in the evolution of standards. Speculations will be made on possible developments in the next five years.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref237_1r2" level="file">
               <did>
                  <unittitle>Servant: A New Shell for the MAC, by Andy Hertzfeld.</unittitle>
                  <unitid>V0058.078</unitid>
                  <unitdate normal="1987/1987" type="inclusive">1987-04-01</unitdate>
                  <physdesc id="aspace_dfaaa4a747736dddae0b5e62ce2bc5df">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_b000707f02c6d72adfe72c6b8671d5d4" type="box">13</container>
               </did>
               <scopecontent id="aspace_1faaf9ea61ce219d7365e7d62e01c83c">
                  <head>Scope and Contents note</head>
                  <p>Servant is a new MAC shell replacing the FINDER, the most common shell for the MAC. The goal in designing Servant is to help evolve the MAC user interface into the late eighties. The program has four major elements: a second generation browser, intuitive multitasking support for rapid switching between applications, customizes to allow better allocation of resources, and user programmability at the shell level. This talk will demonstrate the program and discuss the design constraints and tradeoffs for Servant in the MAC environment.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref240_k3v" level="file">
               <did>
                  <unittitle>An Introduction to the Probabilistic Analysis of Combinatorial Algorithms, by Richard Karp.</unittitle>
                  <unitid>V0058.079</unitid>
                  <unitdate normal="1987/1987" type="inclusive">1987-05-19</unitdate>
                  <physdesc id="aspace_50c260a80a396ab1ae8485749e40f14e">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_4aa896fcb8d7c48fc6c4e9010441cc32" type="box">13</container>
               </did>
               <scopecontent id="aspace_2c73a68ba6f8793b8fce5340a9315264">
                  <head>Scope and Contents note</head>
                  <p>In fields such as operations research, artificial intelligence and computer-aided design, algorithms are often used that perform well in practice even though there is no theoretical guarantee of their good performance. The simplex algorithm for linear programming is perhaps he most notable example of this phenomenon. It is a major challenge to algorithm designers to provide foundation for such quick-anddirty heuristic algorithms. One approach is through probabilistic analysis, in which one defines a probability distribution over the set of instances of a problem, and then endeavors to prove that some fast, simple algorithm performs well with a high probability. The speaker will discuss this approach, using examples related to set partitioning, bin packing and linear programming. He will then make an assessment of the strengths and weaknesses of probabilistic analysis as a method of validating quick-and-dirty algorithms</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref243_kz5" level="file">
               <did>
                  <unittitle>Why Computers Stop, by Jim Gray.</unittitle>
                  <unitid>V0058.080</unitid>
                  <unitdate normal="1988/1988" type="inclusive">1988-10-07</unitdate>
                  <physdesc id="aspace_50e56acb439bb4096d3f7e52b0057357">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_c633e79144d081dddaf6bf17462e70dd" type="box">14</container>
               </did>
               <scopecontent id="aspace_6aba39514711880c63b2a813d144d53e">
                  <head>Scope and Contents note</head>
                  <p>Conventional computers stop because of hardware, software, environment, and people. Fault-tolerant computers stop for the conventional reasons, but the statistics are different. This talk discusses the statistics and approaches to fault tolerance.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref246_anj" level="file">
               <did>
                  <unittitle>The Users Speak Out--A Customer's Perspective of Computer Science, by William Miller (Moderator), Dr. Peter Castro, Kodak, Peter Dietz, General Electric, Michael Rose, US WEST, Dr. Bruce Johnson, and Arthur Anderson. Part 2.</unittitle>
                  <unitid>V0058.081</unitid>
                  <unitdate normal="1988/1988" type="inclusive">1988-02-10</unitdate>
                  <physdesc id="aspace_f3b3601b4b49eec3fe1871a3848064f7">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_ff365a4e980192f84974b1872615b717" type="box">14</container>
               </did>
               <scopecontent id="aspace_661e497c35b85ad73d1a848d794c6a96">
                  <head>Scope and Contents note</head>
                  <p>Computers and information systems are playing an increasing role in society, including fields that lie outside of science and engineering. In many of those fields our ability to implement new systems that provide increased capacity is limited by the state of the art in computer science and engineering. In many areas we know that we need a better understanding of the underlying science and technology (e.g, distributed systems) in order to design and implement leading edge systems. The panel session will provide an opportunity to raise issues of common interest to the academic community and our technologically oriented society as a whole</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref249_2ar" level="file">
               <did>
                  <unittitle>The Alpha Syntauri Synthesizer. a New Concept in a Musical Instrument Project, by Ellen V.B. Lapham and Robin J. Jigour.</unittitle>
                  <unitid>V0058.082</unitid>
                  <unitdate normal="1981/1981" type="inclusive">1981-10-14</unitdate>
                  <physdesc id="aspace_a66f1bd42bb61dd52b9defc9e47d4d10">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_8e12b33958220902e680d9ed5e227bda" type="box">14</container>
               </did>
               <scopecontent id="aspace_1cabc0b717239c40a501631741a94f77">
                  <head>Scope and Contents note</head>
                  <p>The alphaSyntauri instrument is a modular, programmable digital synthesizer system based on the Apple II micro computer. The driving philosophy behind its design is the use of digital technologies to achieve flexibility, reliability and expandability in a compact and cost effective package</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref252_1oy" level="file">
               <did>
                  <unittitle>An Extension to the Programming Language C for VLSI Layout, Ph.D. Oral of Kevin Karplus. Edited master.</unittitle>
                  <unitid>V0058.083</unitid>
                  <unitdate normal="1982/1982" type="inclusive">1982-07-28</unitdate>
                  <physdesc id="aspace_246045e46a654c88597b65f15930034b">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_611226ef1bdaa8ab88824b5693ad865e" type="box">14</container>
               </did>
               <scopecontent id="aspace_87cd566bac1cf6c2a103c4b9d685b904">
                  <head>Scope and Contents note</head>
                  <p>CHISEL is a systems language for building VLSI design tools. It can be used directly for designing chips, or for writing PLA generators, graphics editors, placement and routing systems, or full silicon compilers. CHISEL programs produce libraries of CIF (Caltech Intermediate Format) cells, together with header files providing essential extra information (cell names, sizes, connection ports, ... ). These headers provide all the information necessary for other CHISEL programs to use the cells. Utility programs exist for linking libraries, checking library consistency, plotting, .... The library structure gives strong support for hierarchical design styles. Named connection ports can be defined in any cell and copied with appropriate transformation when cells are placed or replicated. Simple but powerful primitives are provided for drawing wires and transistors. These form the basis for creating cells, and for interconnecting them. A new concept (fringes) is introduced to handle a variety of routing problems. An automatic wiring mechanism for non-permutation routing is provided using fringes.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref255_6uv" level="file">
               <did>
                  <unittitle>Concurrent Testing at the Computer System Level, Ph.D. Oral of Masood Namjoo.</unittitle>
                  <unitid>V0058.084</unitid>
                  <unitdate normal="1982/1982" type="inclusive">1982-11-08</unitdate>
                  <physdesc id="aspace_288a29f32e3401b039e65d175884b81c">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_73e9d260a16056c58097a8a2bde6b804" type="box">14</container>
               </did>
               <scopecontent id="aspace_b1468f86c630ef09ed0bb0f233524ea7">
                  <head>Scope and Contents note</head>
                  <p>This study establishes improved techniques for on-line detection of computer malfunctions. In contrast with the classical techniques for detection of errors at the circuit level, the techniques in this study use the information about the overall system behavior for the purpose of error detection. Such information is extracted from the program definition and is given to an auxiliary low-cost processor, called a watchdog processor. The watchdog processor uses this information in order to detect abnormal system behaviors. Several techniques are explained for monitoring system attributes such as execution flow and data access using a watchdog processor. The architecture of a general purpose watchdog processor called CERBERUS-16 is described. Techniques for concurrent testing at the microprogram execution level are developed. In these techniques the microprogrammed control unit is modified so that it is possible to detect a large percentage of sequencing and microcode errors.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref258_j05" level="file">
               <did>
                  <unittitle>Copyright, Patents and Trademarks, by Dr. Donald J. Chesarek.</unittitle>
                  <unitid>V0058.085</unitid>
                  <unitdate normal="1983/1983" type="inclusive">1983-02-02</unitdate>
                  <physdesc id="aspace_9083c3db48fd78a6c3f5f47135a02bc8">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_508e5e20bfbb526efc6ad25fa6423fd0" type="box">15</container>
               </did>
               <scopecontent id="aspace_f1161f9d18ebd19710267b03d53a2b41">
                  <head>Scope and Contents note</head>
                  <p>Copyright, patents and trademarks are formal mechanisms to protect intellectual and industrial property. The presentation will start with a review of basic concepts with a historical perspective and move to a discussion of current requirements based on easy to remember examples. Scenarios from the speaker's development experience will be used to illustrate how development problems can arise and some of the recovery techniques used to minimize rework. Understanding the basic concepts is fundamental to problem avoidance during the development cycle and legal problems after the product has shipped.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref261_6dh" level="file">
               <did>
                  <unittitle>The New Generation Software Technology as Represented by the LISA System, by John Couch and John Love.</unittitle>
                  <unitid>V0058.086</unitid>
                  <unitdate normal="1983/1983" type="inclusive">1983-02-16</unitdate>
                  <physdesc id="aspace_dc32523dbcd34e5eef8a44a46afa1b2a">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_c7774450bf4e5d6cface5306c957e007" type="box">15</container>
               </did>
               <scopecontent id="aspace_8a056a5aee46d075b08a864384bb9d5b">
                  <head>Scope and Contents note</head>
                  <p>The Apple LISA is an integrated software and hardware personal computer system designed for the non-programmer. LISA features an iconic (picture-based) programming environment which models closely the office environment LISA is intended to support. Technical problems plagued this talk by John Couch and John Love; the camera was unable to capture a truly readable image of the demonstration on the machine and during the early portion of the talk there were sound problems. Still, the talk itself and the questions afterward are of interest. The talk is followed by a professionally filmed demo provided by Apple[, "in which the graphics are excellent."]</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref264_r2k" level="file">
               <did>
                  <unittitle>Constraint Propagation Techniques for Theory-Driven Data Intemretation, Ph.D. Oral of Tom Dietterich. Edited master.</unittitle>
                  <unitid>V0058.087</unitid>
                  <unitdate normal="1984/1984" type="inclusive">1984-10-25</unitdate>
                  <physdesc id="aspace_123a43ab5148c8a9bafb87e6948db67d">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_70f0d43c8c8d4b1c39fbef7b877dc571" type="box">15</container>
               </did>
               <scopecontent id="aspace_4a504746c4f4ab20e9509bc6df482ef2">
                  <head>Scope and Contents note</head>
                  <p>This talk defines the task of THEORY-DRIVEN DATA INTERPRETATION (TDDI) and investigates the adequacy of constraint propagation techniques for performing it. Data interpretation is the process of applying a given theory T (possibly a partial theory) to interpret observed facts F and infer a set of initial conditions C such that from C and T one can infer F. Most existing data interpretation programs do not employ an explicit theory T, but rather use some algorithm that embodies T. Theory-driven data interpretation involves performing data interpretation by working from an explicit theory. The method of local propagation of constraints is investigated as a possible technique for implementing TDDI. A model task--forming theories of the file system commands of the UNIX operating system--is chosen for an empirical test of constraint propagation techniques. In the UNIX task, the "theories" take the form of programs, and theory-driven data interpretation involves "reverse execution" of these programs. To test the applicability of constraint techniques, a system named EG has been constructed for the "reverse execution" of computer programs. The UNIX task was analyzed to develop an evaluation suite of data evaluation problems, and these problems have been processed by EG. The results of this empirical evaluation demonstrate that constraint propagation techniques are adequate for the UNIX task, but only if the representation for theories is augmented to include invariant facts about the programs. In general, constraint propagation is adequate for TDDI only if the theories satisfy certain conditions: local invertibility, lack of constraint loops, and tractable inference over propagated values. There are some annoying "blinks" in this tape. However, they do not detract from the content of the lecture.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref267_qzg" level="file">
               <did>
                  <unittitle>Knowledge Engineering: Artificial Intelligence Research at the Stanford Heuristic Programming Project, Produced and Directed by Anne Feibelman. Edited master.</unittitle>
                  <unitid>V0058.088</unitid>
                  <unitdate normal="1985/1985" type="inclusive">1985-02</unitdate>
                  <physdesc id="aspace_c9d3654b66a36b2cc4b91018a6a94655">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_dfe9838f01d099710dc0f41fbe9dea62" type="box">15</container>
               </did>
               <scopecontent id="aspace_df3482f244baed116d8522e28fa63416">
                  <head>Scope and Contents note</head>
                  <p>This twenty-minute film has been chosen for the United States Pavilion at the 1985 World's Fair at Tsukuba, Japan.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref270_ooc" level="file">
               <did>
                  <unittitle>Multi-Level Logic Array Synthesis, Ph.D. Oral of Christopher Rowen. Edited master.</unittitle>
                  <unitid>V0058.089</unitid>
                  <unitdate normal="1985/1985" type="inclusive">1985-06-12</unitdate>
                  <physdesc id="aspace_4a8af47aa77e416bad04b064bfdaae86">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_44683e255e3c0b66b546b441ec30c6c2" type="box">15</container>
               </did>
               <scopecontent id="aspace_0127ad49ada23972ced5644254a74ff9">
                  <head>Scope and Contents note</head>
                  <p>Automatic synthesis of VLSI logic circuits from function descriptions creates the opportunity for vastly reduced design cost, but presents formidable challenges. This silicon compilation requires a four step translation: 1) writing the function in terms of available logic components; 2) minimization of this logic representation; 3) mapping of logic into the target technology's circuit primitives; and 4 )selection of a detailed layout configuration. Existing methods based on programmable logic array (PLA), standard cell and gate array topologies attack the problem by placing severe restrictions on logic structure or circuit topology. A new method based on multi-level logic and Weinberger arrays integrates the entire compilation from functional description to layout generation, and provides greater flexibility in logic minimization, circuit topology and design goals. Multi-level logic and Weinberger arrays serve as ideal partners in synthesis of large circuit structures. Deeply nested logic expressions can save exponential area, power and circuit delay over sum-of-products form, and Weinberger arrays can directly implement the arbitrary interconnections of these complex logic functions.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref273_q2e" level="file">
               <did>
                  <unittitle>Implementation of Resilient. Atomic Data Types, by Prof. Barbara Liskov. The first of two lectures given by Prof. Liskov on two successive days. Edited master.</unittitle>
                  <unitid>V0058.090</unitid>
                  <unitdate normal="1986/1986" type="inclusive">1986-01-29</unitdate>
                  <physdesc id="aspace_fcdc130cb705a079b9f84296d81b00f1">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_6b4c4af6499f10476b4a741ce0360627" type="box">16</container>
               </did>
               <scopecontent id="aspace_2af80d01c6751620e3c326cf6dec9fa1">
                  <head>Scope and Contents note</head>
                  <p>A major issue in many distributed programs is how to preserve the consistency of data in the presence of concurrency and hardware failures. A promising approach is to implement the programs in terms of data types with two properties: their objects are atomic (they provide serializability and totality for the activities that use them) and resilient (they survive hardware failures with high probability). The talk discusses issues that arise in implementing such atomic types and describes a particular linguistic mechanism provided in the Argus programming language. The approach is illustrated with several examples.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref276_k4w" level="file">
               <did>
                  <unittitle>Specifications of Distributed Programs, by Prof. Barbara Liskov. The second of two lectures given by Prof. Liskov on two successive days. Edited master.</unittitle>
                  <unitid>V0058.091</unitid>
                  <unitdate normal="1986/1986" type="inclusive">1986-01-30</unitdate>
                  <physdesc id="aspace_90ab8e53ddf640f0d39abffa29b6bd90">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_29f4deebcbafc3f2904fc2412ba05637" type="box">16</container>
               </did>
               <scopecontent id="aspace_9cbd017d125b0ac14b4674e0bab2ac8e">
                  <head>Scope and Contents note</head>
                  <p>Distributed programs frequently have performance requirements, such as high availability and concurrency. To accommodate these requirements, designers often change the functional behavior of the program from what it would have been in the absence of the requirements. The result is a program whose behavior is difficult to describe. This talk discusses how to give user-oriented, informal specifications of such programs. The specifications are given in a notation that distinguishes the expected and desirable effects from undesirable ones. This distinction makes the specifications easier to understand and is informative for both the users and the implementors of the program. To illustrate the approach, the talk will include example specifications of several distributed programs that have been described in the literature.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref279_nm9" level="file">
               <did>
                  <unittitle>"Important Areas of Computer Science Research as Seen from an Industrial Viewpoint, by Dr. Elliot PinsonPinson, AT&amp;T Bell Labs; Dr. Janusz Kowalik, Boeing Computer Services Co.; and Dr. George Dodd, G.M. Research Labs, Panelists of the 18th Annual Meeting of the Stanford Computer Forum"</unittitle>
                  <unitid>V0058.092</unitid>
                  <unitdate normal="1986/1986" type="inclusive">1986-02-04</unitdate>
                  <physdesc id="aspace_c8cf60138bdaacc7805b6ac2415d01b7">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_8204d0f50ad74d8e7a6a308251a9a008" type="box">16</container>
               </did>
               <scopecontent id="aspace_4695d9aa3847133b73d24b016bd08855">
                  <head>Scope and Contents note</head>
                  <p>This Panel Discussion was sponsored by the Eighteenth Annual Meeting of the Stanford Computer Forum. At the Seventeenth Annual Meeting in February, 1985, the industrial members of the Forum requested a greater interaction between the academic and industrial participants. Each participant opened with short remarks, followed by a panel discussion involving the audience and the panel's industrial participants. No constraints were placed on topics of discussion. The Forum member participants indicated those areas of computer science which they considered particularly important as research topics worldwide.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref282_hb4" level="file">
               <did>
                  <unittitle>An Overview of Expert Systems, by Dr. Doug Lenat. Master.</unittitle>
                  <unitid>V0058.093</unitid>
                  <unitdate normal="1986/1986" type="inclusive">1986-05-14</unitdate>
                  <physdesc id="aspace_c6ee43d57e63f73bba8d2fd933408d2b">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_2bff42abe1880ffb2883384cb597d649" type="box">16</container>
               </did>
               <scopecontent id="aspace_f947af0f90bfb7a462e4c6e562411916">
                  <head>Scope and Contents note</head>
                  <p>Dr. Lenat describes ways that artificial intelligence, specifically expert systems, will codify the body of common sense knowledge so that it can be used for problem solving and knowledge acquisition. Lenat presented the lectures at a Hewlett-Packard workshop, courtesy of the Computer Forum. H-P has graciously made the tapes available to us for the Distinguished Lecture Series.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref285_cvf" level="file">
               <did>
                  <unittitle>Common Sense Knowledge, by Dr. Doug Lenat. Edited Master.</unittitle>
                  <unitid>V0058.094</unitid>
                  <unitdate normal="1986/1986" type="inclusive">1986-05-14</unitdate>
                  <physdesc id="aspace_4149c8821927056079abddddb414c203">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_1a3d9afe0eb66d2fa1672cef189a1d19" type="box">16</container>
               </did>
            </c02>
            <c02 id="s17i1" level="file">
               <did>
                  <unittitle>"The Transition of Computer Science Results to Business and Industry, by Dr. Richard Shuey, Moderator; Dr. Thomas Buckholz, PG&amp;E; Dr. William Spencer, Xerox Corporation; Dr. Gordon Bell, NSF, Panelists of the 19th Annual Meeting of the Stanford Computer Forum,"</unittitle>
                  <unitid>V0058.095</unitid>
                  <unitdate normal="1987/1987" type="inclusive">1987-02-04</unitdate>
                  <physdesc id="aspace_e87d978fc353014410e4251b215a9555">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_a7b47dacf0730afd8792eaf5fb6804c0" type="box">17</container>
               </did>
            </c02>
            <c02 id="aspace_ref291_n1q" level="file">
               <did>
                  <unittitle>The Social History of the Personal Computer, Lee Felsenstein</unittitle>
                  <unitid>V0058.096</unitid>
                  <unitdate normal="1989/1989" type="inclusive">1989-06-07</unitdate>
                  <physdesc id="aspace_32457b51bb064e6ec735ccad4beaf57b">
                     <extent>2 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_17dccdd18477f0c4fa69a2ddd21d9b60" type="box">17</container>
                  <dao audience="internal"
                       actuate="onrequest"
                       href="https://sul-streaming.stanford.edu/collections/v0058/gv263yp2480_web.html"
                       show="new"
                       title="The Social History of the Personal Computer, Lee Felsenstein">
                     <daodesc>
                        <p>The Social History of the Personal Computer, Lee Felsenstein: 1989 Jun 7</p>
                     </daodesc>
                  </dao>
               </did>
            </c02>
            <c02 id="aspace_ref295_ek3" level="file">
               <did>
                  <unittitle>Algorhithm Automation, Marc Brown</unittitle>
                  <unitid>V0058.097</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (u-matic)</extent>
                  </physdesc>
                  <unitdate normal="1988/1988" type="inclusive">1988-09-28</unitdate>
                  <container id="aspace_25b76a034a83a2cd1b2b5786fc64ce4a" type="box">17</container>
               </did>
            </c02>
            <c02 id="aspace_ref298_24r" level="file">
               <did>
                  <unittitle>Microprocessors in the Works from Motorola, Russell Stanphill</unittitle>
                  <unitid>V0058.098</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (vhs)</extent>
                  </physdesc>
                  <unitdate normal="1989/1989" type="inclusive">1989-05-24</unitdate>
                  <container id="aspace_cc21fd36dfcdadb2990e6c6ceb22fa72" type="box">17</container>
               </did>
            </c02>
            <c02 id="aspace_ref302_7m2" level="file">
               <did>
                  <unittitle>Efficient Debugging of Parallel Programs, Bart Miller</unittitle>
                  <unitid>V0058.099</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (vhs)</extent>
                  </physdesc>
                  <unitdate normal="1988/1988" type="inclusive">1988-03-30</unitdate>
                  <container id="aspace_26bb4b2ae66c7a0d7623b7280048073d" type="box">17</container>
               </did>
            </c02>
            <c02 id="aspace_ref305_tww" level="file">
               <did>
                  <unittitle>Legal Issues, Tom Vinje</unittitle>
                  <unitid>V0058.100</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (vhs)</extent>
                  </physdesc>
                  <unitdate normal="1988/1988" type="inclusive">1988-12-07</unitdate>
                  <physdesc id="aspace_561263e873b64e5bbbcdf79964bd7b99">
                     <extent>2 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_9bc81d6af9c9fa8cdf35fb5952430416" type="box">18</container>
               </did>
               <scopecontent id="aspace_b538c769967ffeb793e9bd9608221db6">
                  <head>Scope and Contents note</head>
                  <p>Mr. Vinje discusses legal issues concerning the protection (copyright protectability of computer software, covering areas such as look-feel and interface compatibility.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref309_d28" level="file">
               <did>
                  <unittitle>Viruses. Worms. and Other Distributed Computations, John Shoch and Jon Shapiro</unittitle>
                  <unitid>V0058.101</unitid>
                  <unitdate normal="1988/1988" type="inclusive">1988-11-09</unitdate>
                  <physdesc id="aspace_0a18d44c6a12c9e13e380c9d6dc151da">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_56399caf5b7f194c663021b95ebae23a" type="box">18</container>
               </did>
               <scopecontent id="aspace_baad6e3ee781347e29963c2748167dbc">
                  <head>Scope and Contents note</head>
                  <p>The network virus widely reported in the press the last few days is one example of distributed computations. The speakers will discuss the history of such distributed computations and the specifics of the particular virus recently found and eradicated.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref312_lpd" level="file">
               <did>
                  <unittitle>The NeXT Computer, Craig Hansen</unittitle>
                  <unitid>V0058.102</unitid>
                  <unitdate normal="1988/1988" type="inclusive">1988-10-19</unitdate>
                  <physdesc id="aspace_42644d8a1edf86d6e2a9dfd48501de61">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <dao audience="internal"
                       actuate="onrequest"
                       href="https://sul-streaming.stanford.edu/collections/v0058/tx467yq7855_web.html"
                       show="new"
                       title="The NeXT Computer, Craig Hansen">
                     <daodesc>
                        <p>The NeXT Computer, Craig Hansen: 19 October 1988</p>
                     </daodesc>
                  </dao>
                  <container id="aspace_a9091844f4b16105ad35bbf5b6c71aaf" type="box">18</container>
               </did>
               <scopecontent id="aspace_a5d03ea66c42a929cf4321d66b9d811c">
                  <head>Scope and Contents note</head>
                  <p>The NeXT Computer was introduced on October 12 after a three-year development effort. The design of the NeXT Computer reaches breakthrough advances in cost and performance and provides a feature-rich computing environment that uses high-quality graphics and sound along with a large library of software and literature. The talk will describe the hardware systems of the NeXT Computer, including the processor card, backplane and other expansion interfaces, the Megapixel Display, the 400 DPI Laser Printer, and the 256 Megabyte read/write/erasable optical drive.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref315_qno" level="file">
               <did>
                  <unittitle>KEYKOS: A Secure Object-Oriented Operating Systems, Norm Hardy</unittitle>
                  <unitid>V0058.103</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (vhs)</extent>
                  </physdesc>
                  <unitdate normal="1989/1989" type="inclusive">1989-02-08</unitdate>
                  <physdesc id="aspace_0f58dadc5452fcfd66c7e3cd15a539f9">
                     <extent>2 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_40877c94acc3c9b8967534b5ed2a64ba" type="box">19</container>
               </did>
            </c02>
            <c02 id="aspace_ref319_q7s" level="file">
               <did>
                  <unittitle>RISC vs. CISC; Old vs. New, Nick Tredennick.</unittitle>
                  <unitid>V0058.104</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">2 videotape(s) (u-matic)</extent>
                  </physdesc>
                  <unitdate normal="1989/1989" type="inclusive">1989-04-05</unitdate>
                  <physdesc id="aspace_160c2e7d918440a2fd00cd285eb6f3ff">
                     <extent/>
                  </physdesc>
                  <container id="aspace_e144510a6b93aedd1a230670b5a2cb70" type="box">19</container>
               </did>
               <scopecontent id="aspace_67b590723a7a403d88f56476310bb558">
                  <head>Scope and Contents note</head>
                  <p>Tredennick discusses trends in microprocessor architecture and development, including the current RISC fad. If RISCs succeed, it's on the strength of their implementations and in spite of the weak theoretical base. The RISC "breakthrough" is packaging the idea: changes to the architecture are a technology advance. The real issue is new architecture vs. old architecture. These ideas compete in a new field, with a weak experimental and theoretical base, developing under intense commercial pressure. The next microprocessor implementations will feature: register relabeling, distributed control, out -of-order execution, deep pipelining, write reservation queues, branch prediction, and multiple instruction issue.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref322_3nj" level="file">
               <did>
                  <unittitle>Computer Science as Seen from Industry, panel discussion.</unittitle>
                  <unitid>V58.104</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (u-matic)</extent>
                  </physdesc>
                  <physdesc id="aspace_6c07aed0f0cddfe5ca0beaa8a77b89d4">
                     <extent/>
                  </physdesc>
                  <container id="aspace_dec4ab562225f9841d2d48342f415c8e" type="box">19</container>
               </did>
            </c02>
            <c02 id="aspace_ref325_zat" level="file">
               <did>
                  <unittitle>The Architecture and Implementation of the Intel 486, John Crawford and Ken Shoemaker</unittitle>
                  <unitid>V0058.105</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">2 videotape(s) (vhs)</extent>
                  </physdesc>
                  <unitdate normal="1989/1989" type="inclusive">1989-05-03</unitdate>
                  <physdesc id="aspace_c6ed29aeb04b6dc6dad191ca3045bdc0">
                     <extent/>
                  </physdesc>
                  <container id="aspace_6d94f039db154937bf938285067f77f9" type="box">20</container>
               </did>
               <scopecontent id="aspace_c020f2da34c431dd473a892396bd9e6e">
                  <head>Scope and Contents note</head>
                  <p>Intel 486 processor provides a 2.5 to 3 times performance gain over the 386. In this talk the microarchitecture of the 486 will be described, the various functional blocks and their interconnecions identified, the pipelining within the execution and address calculation units explained, and the performance of the on-chip cache examined.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref328_yrj" level="file">
               <did>
                  <unittitle>Intel's 960 Superscalar Architecture and Future Implementations, Steve McGready</unittitle>
                  <unitid>V0058.106</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (vhs)</extent>
                  </physdesc>
                  <unitdate normal="1989/1989" type="inclusive">1989-05-10</unitdate>
                  <container id="aspace_caf04722c2c2044b35df42bbe8d42102" type="box">20</container>
               </did>
               <scopecontent id="aspace_6590382c5c7ff911cae6a835a3ed7265">
                  <head>Scope and Contents note</head>
                  <p>Mr. McGeady will present a brief overview of Intel's 960 architecture, and will present technical details of a new implementation of that architecture that allows the dispatch and execution of several instructions each clock cycle. The detailed micro-architecture of the core processor will be desribed, as well as the macro-architectural considerations that enable such an implementation.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref331_6c3" level="file">
               <did>
                  <unittitle>Conflicts of RISC Architecture in Real-Time Control, Kim Rubin</unittitle>
                  <unitid>V0058.107</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (vhs)</extent>
                  </physdesc>
                  <unitdate normal="1989/1989" type="inclusive">1989-05-17</unitdate>
                  <container id="aspace_3d0b7f1b1f38fc7aaa6f1be37b965ed2" type="box">20</container>
               </did>
               <scopecontent id="aspace_1721e8af0400724d966b7f4d89d171f3">
                  <head>Scope and Contents note</head>
                  <p>RISC architecture trades away consistent performance for statistical performance. Large register sets, cache memory, and other features, are diametrically opposed to the short context switching time and low latency needed by real-time CRT) control systems. Specific requirements that result from how embedded computers are used in real-time systems should dictate critical underlying architectural design.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref334_vxd" level="file">
               <did>
                  <unittitle>Architecture and Design of the i860 64-bit Microprocessor, Les Kohn</unittitle>
                  <unitid>V0058.108</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (vhs)</extent>
                  </physdesc>
                  <unitdate normal="1989/1989" type="inclusive">1989-04-12</unitdate>
                  <dao audience="internal"
                       actuate="onrequest"
                       href="https://sul-streaming.stanford.edu/collections/v0058/vn286qc7384_web.html"
                       show="new"
                       title="Architecture and Design of the i860 64-bit Microprocessor, Les Kohn">
                     <daodesc>
                        <p>Architecture and Design of the i860 64-bit Microprocessor, Les Kohn: 4/12/1989</p>
                     </daodesc>
                  </dao>
                  <container id="aspace_de7cf6adf30c370d3d1b95386324fc42" type="box">20</container>
               </did>
               <scopecontent id="aspace_91531ca67e6aa441f8bc169bcafe5a4a">
                  <head>Scope and Contents note</head>
                  <p>Semiconductor technology and CAD tools have reached the point where it is possible to develop 1,000,000 transistor microprocessors. Conceived to take full advantage of this technology, the i860 CPU is a single chip, 64-bit RISC based microprocessor which uses parallel instruction execution and supercomputer architectural concepts. To achieve balanced performance, one third of the chip area is devoted to integer instructions, one third to instruction and data caches, and one third to floating point and 3-D graphics support. The talk will review architectural goals as well as implementation considerations.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref337_t1a" level="file">
               <did>
                  <unittitle>The MARS Hardware Accelerator, Prathima Agrawal</unittitle>
                  <unitid>V0058.109</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (vhs)</extent>
                  </physdesc>
                  <unitdate normal="1989/1989" type="inclusive">1989-04-26</unitdate>
                  <container id="aspace_823444dd178f7f9ad30f244ec39f60f8" type="box">20</container>
               </did>
               <scopecontent id="aspace_ff6b1e6c3a77606486d84ab111bf7082">
                  <head>Scope and Contents note</head>
                  <p>This talk will focus on three aspects of MARS (Microprogrammable Accelerator for Rapid Simulations). First I will describe the architectural and design details of the machine. Second, I will present the logic simulation algorithms that have been implemented and are in production use today. Lastly, I will show the versatility of MARS for solving graph search problems by describing how MARS pipelines could be set up to accomplish other CAD and some of the non-CAD applications such as connected speech recognition.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref340_8gn" level="file">
               <did>
                  <unittitle>Link-Time Code Modification, David W. Wall</unittitle>
                  <unitid>V0058.110</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (vhs)</extent>
                  </physdesc>
                  <unitdate normal="1989/1989" type="inclusive">1989-02-01</unitdate>
                  <container id="aspace_a0cfbf1b62dce9275c6f4fe33e1d7eab" type="box">20</container>
               </did>
               <scopecontent id="aspace_615d3ac127fdb67d1d10bd7f0732fd24">
                  <head>Scope and Contents note</head>
                  <p>The language system for DECWRL's Titan and MultiTitan rests on an optimizing back end called Mahler. Mahler does some of its optimizations at link time rather than compile time, because more global information is available then. Nevertheless, these optimizations are optional; the Mahler compiler produces correct code that can be linked in merely traditional manner. To achieve this, we have developed a terminology of link-time code modification. Link-time code modification is proving useful in performance analysis and architectural modeling as well.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref343_oi6" level="file">
               <did>
                  <unittitle>Backplane Bus Design, Paul Borrill</unittitle>
                  <unitid>V0058.111</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (vhs)</extent>
                  </physdesc>
                  <unitdate normal="1989/1989" type="inclusive">1989-01-18</unitdate>
                  <container id="aspace_edcb4f4953b29331237925ad52979526" type="box">20</container>
               </did>
               <scopecontent id="aspace_c5fb98ab8fb5eca9e2217e6977a27362">
                  <head>Scope and Contents note</head>
                  <p>This lecture is designed to give an overview of some of the theoretical and practical issues in backplane bus design. Topics covered will include transmission line effects, the bus drivng problem, synchronization domains, spatial and manufacturing skews, clock latency, split vs non-split transactions, arbitration methods, the byte-ordering problem, and protocols to support cache consistency along with general bus architecture models.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref346_bdn" level="file">
               <did>
                  <unittitle>Toward a Gigabit National Network: Technology and Policy, David I. Farber</unittitle>
                  <unitid>V0058.112</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (vhs)</extent>
                  </physdesc>
                  <unitdate normal="1989/1989" type="inclusive">1989-01-25</unitdate>
                  <container id="aspace_9b2ca56f5fb2f07453764f88d76c3668" type="box">20</container>
               </did>
               <scopecontent id="aspace_b97de9201a602df5d25b5a59eec1b437">
                  <head>Scope and Contents note</head>
                  <p>Over the past two years major forces have been at work shaping the future of communciations networks (in particular data networks). These forces have been both political and technological. In the political arena, the success of the NSFNet in the support of science has focused the attention of policy makers on where the nation must be in the year 2000. Several reports including one from the National Academy have outlined possible directions. In the technological arena the development of switching architectures capable of handling the variety of traffic anticipated and the rapid deployment of fibers have changed the complexion of the field. This talk will explore both areas and will also explore the impact of the gigabit world on the computer field.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref349_s74" level="file">
               <did>
                  <unittitle>Workstation for the '90s, Andreas Bechtolsheim</unittitle>
                  <unitid>V0058.113</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (vhs)</extent>
                  </physdesc>
                  <unitdate normal="1989/1989" type="inclusive">1989-04-19</unitdate>
                  <container id="aspace_71a9714cf7af0fbbc9418b20b0a1578e" type="box">21</container>
               </did>
               <scopecontent id="aspace_f8b0eb8dd81059f3e50048287fe13451">
                  <head>Scope and Contents note</head>
                  <p>Mr. Bechtolsheim discusses the goals, design, and implementation of SUN's new SP ARC workstation, pointing out a number of its features.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref352_k86" level="file">
               <did>
                  <unittitle>CAD Applications of Massive Parallel Computers, Alberto Sangiovanni-Vacentelli</unittitle>
                  <unitid>V0058.114</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (vhs)</extent>
                  </physdesc>
                  <unitdate normal="1989/1989" type="inclusive">1989-03-01</unitdate>
                  <container id="aspace_7f632d8b8e0d195673dba842f27a2610" type="box">21</container>
               </did>
               <scopecontent id="aspace_b0d564eddce59d37c82c041f2f9357a5">
                  <head>Scope and Contents note</head>
                  <p>Massively parallel computers such as the Connection Machine developed by D. Hillis at MIT offer a new paradigm for CAD algorithms which allows the exploitation of fine as well as coarse grain parallelism. Two CPU intensive CAD problems have been attacked with the Connection Machine: process simulation and device simulation. As submicron geometries require that simulations be performed in three dimensions, the computational requirements increase dramatically. This talk will focus on the relationships between algorithms and massively parallel architecture.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref355_m8k" level="file">
               <did>
                  <unittitle>VorTeX, a Multiple Representation System, Michael Harrison</unittitle>
                  <unitid>V0058.115</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (vhs)</extent>
                  </physdesc>
                  <unitdate normal="1989/1989" type="inclusive">1989-03-08</unitdate>
                  <container id="aspace_3f28240373e4786b9eea4a10275f1386" type="box">21</container>
               </did>
               <scopecontent id="aspace_afecfd094d270a2e0979e10804c21397">
                  <head>Scope and Contents note</head>
                  <p>There are two basic types of document processing systems, source-based (like TeX) and direct manipulation (a la MacWrite). VorTeX, for Visually Oriented TeX, is a multiple representation document processing system which has some features of both types of processors. In this talk, we will show a video tape of VorTeX, a companion system called IncTeX as well as a Postscript interpreter built at Berkeley. We will discuss some of the design, implementation, and performance issues.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref358_0ja" level="file">
               <did>
                  <unittitle>Debug: a Multiprocessor Debugger for UNIX System V, Jonathan Shapiro</unittitle>
                  <unitid>V0058.116</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (vhs)</extent>
                  </physdesc>
                  <unitdate normal="1989/1989" type="inclusive">1989-03-15</unitdate>
                  <container id="aspace_a9d0fe638746cddd80967f3afaf0ebbd" type="box">21</container>
               </did>
               <scopecontent id="aspace_3cd79b725a4c6170f0b73a3cd66ecdf7">
                  <head>Scope and Contents note</head>
                  <p>Better integrated networking and the rapid proliferation of network-based applications is pushing us toward the need for multiprocess debugging across heterogeneous architectures. This talk describes Debug, a prototype developed internally at AT&amp;T Bell Laboratories to explore the issues in this sort of debugging. Debug supports multiple source languages, and can debug both sides of a client-server application in which the server is running on one architecture and the client on another.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref361_8wx" level="file">
               <did>
                  <unittitle>The Computer Forum Panel Discussion: Issues in Distributed Computing</unittitle>
                  <unitid>V0058.117</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (vhs)</extent>
                  </physdesc>
                  <unitdate normal="1989/1989" type="inclusive">1989-02-15</unitdate>
                  <container id="aspace_78580181daf67fbc8074ef8f31378030" type="box">21</container>
               </did>
               <scopecontent id="aspace_94c96304dfb91d9d1c762d5ff8efafe9">
                  <head>Scope and Contents note</head>
                  <p>The costs of computing, memory, and mass storage continue to drop at a rapid rate. To date, that rate has been much more rapid than any reduction in communications costs. Added to these economic trends are advantages to the user and information system developer of local control and operation. The rise of micro "main frames," microcomputers, personal computers, and work stations illustrate the overall trend to distributed computing. At the same time, there will continue to be a need for central computing and data services. It is important that we understand the issues, and tradeoffs, in designing future distributed systems.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref364_p25" level="file">
               <did>
                  <unittitle>Betting, Bribery, and Bankruptcy: Organizing Computation Around Simulated Free Enterprise, Ted Kaehler,</unittitle>
                  <unitid>V0058.118</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (vhs)</extent>
                  </physdesc>
                  <unitdate normal="1988/1988" type="inclusive">1988-11-16</unitdate>
                  <container id="aspace_b41245fbeaf40740814cedb452fedd94" type="box">21</container>
               </did>
               <scopecontent id="aspace_138b02e011763ee5dca74a1b4dd6e45b">
                  <head>Scope and Contents note</head>
                  <p>Objects inside a computer exchange money for work and information in the course of solving a problem. When designing a monetary incentive system for computational entities, it helps to think of them as "bad" or "uncooperative.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref367_szr" level="file">
               <did>
                  <unittitle>Vectors are History, Forest Baskett</unittitle>
                  <unitid>V0058.119</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (vhs)</extent>
                  </physdesc>
                  <unitdate normal="1988/1988" type="inclusive">1988-11-30</unitdate>
                  <container id="aspace_3b5a604d52fa31969eaf7169698b28b7" type="box">not specified</container>
               </did>
               <scopecontent id="aspace_b7d2f09d2611eb884d74b0a88b83b430">
                  <head>Scope and Contents note</head>
                  <p>In this talk we give a few technology-independent methods for assessing the architectural effectiveness of existing vector processors and scalar processors. We show the progress of scalar processor architectures over the last ten years and show how they are now surpassing vector processor architectures in terms of architectural effectiveness on vectorizable as well as non-vectorizable scientific and engineering applications. We illustrate this current state by comparing the actual performance of our Silicon Graphics Iris 4D1240 scalar multiprocessor with the performance of some other vector multiprocessors. In closing we illustrate the critical importance of block method algorithms for achieving the performance potential of most current scalar processors.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref370_u5r" level="file">
               <did>
                  <unittitle>Compiling for a Memory Hierarchy, Rob Schreiber</unittitle>
                  <unitid>V0058.120</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (vhs)</extent>
                  </physdesc>
                  <unitdate normal="1988/1988" type="inclusive">1988-10-12</unitdate>
                  <container id="aspace_3b1ef278f3f4d45888aea6fc27803caa" type="box">21</container>
               </did>
               <scopecontent id="aspace_1ea45e629ee0be9a41539bc20619ec94">
                  <head>Scope and Contents note</head>
                  <p>In this talk we explore the use of a two-level memory hierarchy having a large, shared, relatively slow level and a small, distributed, relatively fast level. This scheme has the potential for exploiting the advantages of both shared and distributed memory systems. But to exploit it, programs must make most of their references to the fast, distributed memory. Block algorithms are a powerful tool for exploiting this memory architecture. In this talk we present a general compiler technique for automatically "blocking" algorithms. The problem is reduced to a simple geometric computation.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref373_r64" level="file">
               <did>
                  <unittitle>XTPIPE Overview, Greg Chesson</unittitle>
                  <unitid>V0058.121</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (vhs)</extent>
                  </physdesc>
                  <unitdate normal="1988/1988" type="inclusive">1988-10-26</unitdate>
                  <container id="aspace_dacbe1cdccf50334b721641ba3ecf22a" type="box">21</container>
               </did>
               <scopecontent id="aspace_983f1c8860197994361a6755ae765b91">
                  <head>Scope and Contents note</head>
                  <p>XTP is a new network protocol under development for the last few years which is being incorporated into new ANSI and U.S. Government network standards. It is designed to perform network gateway functions as well as end-to-end transport functions. It provides for reliable multicasting, transactions, selective retransmission, parameterized addressing, delivery confirmation, and reliable datagrams, as well as traditional bulk and stream services. These services are implemented with simple algorithms that can be rendered in VLSI circuits. The Protocol Engine is a chip set designed to operate XTP in real time.</p>
               </scopecontent>
            </c02>
         </c01>
    
    
    
         <c01 id="aspace_ref376_hqw" level="series">
            <did>
               <unittitle>Additional Videorecordings</unittitle>
               <unitdate normal="1980/1987" type="inclusive">1980-1987</unitdate>
            </did>
            <c02 id="aspace_ref377_wpa" level="file">
               <did>
                  <unittitle>Software Controlled Caches in the VMP Multiprocessor, David Cheriton</unittitle>
                  <unitid>V0058.122</unitid>
                  <unitdate normal="1986/1986" type="inclusive">1986-10-08</unitdate>
                  <physdesc id="aspace_61cf5a1a1e237d4bfa5a376e4678c7a5">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_e75ece472c8d01e992ac4b1383501d99" type="box">22</container>
               </did>
               <scopecontent id="aspace_2dfb6cac0fce91bc422b79fcc66fad41">
                  <head>Scope and Contents note</head>
                  <p>VMP is an experimental multiprocessor that follows the familiar basic design of multiple processors, each with a cache, connected by a shared bus to global memory. Each processor has a synchronous, virtually addressed, single master connection to its cache, providing very high memory bandwidth. An unusually large cache page size and fast sequential memory copy hardware make it feasible for cache misses to be handled in software, analogously to the handling of virtual memory page faults. Hardware support for cache consistency is limited to a simple state machine that monitors the bus and interrupts the processor when a cache consistency action is required. In this talk, we describe how the VMP design provides the high memory bandwidth required by modern high-performance processors with a minimum of hardware complexity and cost. We also describe simple solutions to the consistency problems associated with virtually addressed caches. Simulation results indicate that the design achieves good performance providing data contention is not excessive.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref380_ctl" level="file">
               <did>
                  <unittitle>Xerox Personal Research Computers, Edward McCreight</unittitle>
                  <unitid>V0058.123</unitid>
                  <unitdate normal="1980/1980" type="inclusive">1980-10-22</unitdate>
                  <physdesc id="aspace_57af3265eec3c3ab04f72ae670b1a4c7">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_97e6fa088861dd02636ad83857f1829e" type="box">23</container>
               </did>
               <scopecontent id="aspace_ce04838adc083228d793bb01fb9afc60">
                  <head>Scope and Contents note</head>
                  <p>Between 1973 and 1980, three microprogrammable 16-bit personal computers were developed at the Xerox Palo Alto Research Center. Divided into control, arithmetic, memory, macroinstruction-decoding, and I/O sections, the architectures of these computers are explained, compared, and contrasted.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref383_cph" level="file">
               <did>
                  <unittitle>A High Level Approach to Computer Document Production, Brian K. Reid</unittitle>
                  <unitid>V0058.124</unitid>
                  <unitdate normal="1980/1980" type="inclusive">1980-12-03</unitdate>
                  <physdesc id="aspace_8b0a7cb5d53de16ae24565923e12df09">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_dc7694ad807e5bff5a3b365207efc66b" type="box">23</container>
               </did>
               <scopecontent id="aspace_e567094066c70f5b5217987429b14feb">
                  <head>Scope and Contents note</head>
                  <p>People spend an outrageous amount of time using computers to format their documents. There are two possible explanations for this: the great importance of the task, or the inappropriateness of the standard tools. SCRIBE is a stab at building more appropriate tools: it was not designed to produce beautiful output, but to accept beautiful input. The SCRIBE system was designed around the principle that all good software should deal with the problem domain at as high a level of abstraction as possible, and around the underlying assumption that although users don't want to become experts, everybody wants to tinker. To these ends, SCRIBE is a high-level non-procedural table-drive system, with an extensive facility for making modifications to its behavior without needing to understand the programming issues behind them.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref386_fu0" level="file">
               <did>
                  <unittitle>The Architecture and Implementation of the Intel 432, Justin Rattner</unittitle>
                  <unitid>V0058.125</unitid>
                  <unitdate normal="1981/1981" type="inclusive">1981-02-25</unitdate>
                  <physdesc id="aspace_5b7312556c9e01ac3ecc6cdf0c79f11d">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_a529a1fc67842ed5019a034f1353def5" type="box">23</container>
               </did>
               <scopecontent id="aspace_86a06a3ec28b1ddf5e942bcf702e5fa2">
                  <head>Scope and Contents note</head>
                  <p>The Intel 432 is a recently introduced microcomputer system designed to support very large scale software (VLSS) systems. In order to better serve software-intensive microcomputer applications, the 432 departs significantly from existing mainframe mini- and microcomputer designs. Examples of this departure include the 432's high-level, object-based architecture and its flexible multiprocessor system organization. This talk will briefly review the motivations and concepts that underlie the 432 and will then take up its object-based architecture and VLSI implementation.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref389_tq3" level="file">
               <did>
                  <unittitle>High Speed Operation of Local Area Networks, John Limb</unittitle>
                  <unitid>V0058.126</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (u-matic)</extent>
                  </physdesc>
                  <unitdate normal="1982/1982" type="inclusive">1982-02-13</unitdate>
                  <container id="aspace_73f7f67310cdfca7648c4e4875c479be" type="box">23</container>
               </did>
               <scopecontent id="aspace_5799f026c4f3f996f2d7ef92d1d51f4f">
                  <head>Scope and Contents note</head>
                  <p>Local Communication Networks need large transmission capacities to handle all traffic in the evolving business environment (e.g., data, voice, facsimile and video). He first compares the high speed performance of two bi-directional CSMA protocols; one very popular and the other very efficient. A unidirectional system using a passive medium (called FASNET) will be described and compared with the other two systems.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref392_ipg" level="file">
               <did>
                  <unittitle>High Speed Operation of Local Area Networks, John Limb</unittitle>
                  <unitid>V0058.127</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (vhs)</extent>
                  </physdesc>
                  <unitdate normal="1982/1982" type="inclusive">1982-02-13</unitdate>
                  <container id="aspace_390b528a8929625903e2dab8c3c3e3d8" type="box">23</container>
               </did>
            </c02>
            <c02 id="aspace_ref394_bpv" level="file">
               <did>
                  <unittitle>A Retrospective on the Dorado, a High-Performance Personal Computer, Kenneth Pier</unittitle>
                  <unitid>V0058.128</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (u-matic)</extent>
                  </physdesc>
                  <unitdate normal="1982/1982" type="inclusive">1982-04-14</unitdate>
                  <container id="aspace_c1493424194648366ff3114c2b902456" type="box">23</container>
               </did>
               <scopecontent id="aspace_b6db41f416e04d67d73eedcce2e9465f">
                  <head>Scope and Contents note</head>
                  <p>Between 1975 and 1980, a high performance personal computer caller Dorado was conceived, designed, implemented and produced within Xerox PARC. The Dorado supports sophisticated single user programming environments in several high level languages including Lisp, Smalltalk, and Mesa. High bandwidth input/output devices, including color displays and networks, are supported as well. This is a retrospective on the properties, successes, and failures of the Dorado project, with an emphasis on the architecture and implementation of the machine. A review of the architecture opens the talk, followed by comments on specific sections introduced in the review. Finally, there is an overall evaluation and some speculation on the past and the future of Dorado-like architectures.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref397_7nc" level="file">
               <did>
                  <unittitle>Locus Developments, Gerald J. Popek</unittitle>
                  <unitid>V0058.129</unitid>
                  <unitdate normal="1982/1982" type="inclusive">1982-02-10</unitdate>
                  <physdesc id="aspace_f7d3eb33c54654848dd9d853f3ff5ee7">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_be4e5958be9df77f5bca0fd0ac20245f" type="box">23</container>
               </did>
               <scopecontent id="aspace_3597ca1cc01ac99c985cfc12251447d8">
                  <head>Scope and Contents note</head>
                  <p>Locus is a distributed operating system, operational at UCLA, that provides a high degree of network transparency, both for data and processes. It provides a system call interface compatible with Unix, and permits a wide degree of resource allocation decisions, including support for diskless machines, replicated storage, etc. The Locus architecture will be briefly reviewed, and then recent developments and ongoing work will be outlined. These include experience with and limits to transparency, a low cost approximation to nested transactions, approaches to heterogeneity, and the boundary between transparence and local autonomy.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref400_5it" level="file">
               <did>
                  <unittitle>The Optical Mouse and an Architectural Methodology for Smart Digital Sensors, Richard Lyon</unittitle>
                  <unitid>V0058.130</unitid>
                  <unitdate normal="1982/1982" type="inclusive">1982-10-06</unitdate>
                  <physdesc id="aspace_360134b5be6e43eb897cfc1a3d4f9c72">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_945ed7c87079cd2a1f6703cbe67d31ff" type="box">23</container>
               </did>
               <scopecontent id="aspace_e473516a557136880e617ae71f504adf">
                  <head>Scope and Contents note</head>
                  <p>A mouse is a pointing device used with interactive computer systems. Electromechanical mice were first developed in the 60s at SRI. The mechanical mouse was redesigned at Xerox and has been in popular use there for several years. To overcome a number of observed problems with the mechanical mouse, work was started in the 1980s on an optical replacement for the electromechanical mouse. This talk describes the design and tenting of the prototype optical mouse.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref403_lpc" level="file">
               <did>
                  <unittitle>The SUN Workstation, Andreas Bechtolsheim</unittitle>
                  <unitid>V0058.131</unitid>
                  <unitdate normal="1982/1982" type="inclusive">1982-11-09</unitdate>
                  <physdesc id="aspace_14746ddf1c9ece8662d4a32aa5f540e4">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_5d52ef198a8c14864e9c04fcf77f1ccc" type="box">23</container>
               </did>
               <scopecontent id="aspace_5c9c9cec83e9be6af68deda20314e832">
                  <head>Scope and Contents note</head>
                  <p>The SUN Workstation is a desk-top personal computer system, combining mainframe processing power, Ethernet networking, and a high-speed raster graphics display with 1024 by 800 pixel resolution. Designed around a 32-bit microprocessor, the Motorola 68010, the SUN Workstation provides approximately 1 MIPS processor performance, multiprocess memory management, virtual memory capabilities, and a physical memory of 1 MByte or more. One of the software environments now being ported to the SUN Workstation is the Berkeley 4.2bsd UNIX operating system. This provides the same software environment on the SUN Workstation now available for the Digital Equipment VAX computer family, together with the ability to run SUN Workstations without local mass storage from remote fileservers. The talk focuses on the system architecture and the implementation of the SUN Workstation. Statistics and history of the project are discussed, and a demonstration is included.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref406_401" level="file">
               <did>
                  <unittitle>Database and Distributed Systems Research, Robin Williams</unittitle>
                  <unitid>V0058.132</unitid>
                  <unitdate normal="1983/1983" type="inclusive">1983-01-11</unitdate>
                  <physdesc id="aspace_bea54d1e1c1716b05fffbf9545cad4d7">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_370f5d87e14a1d982daf72963989eb37" type="box">23</container>
               </did>
               <scopecontent id="aspace_e65b384778e18b78cd35e40677e9ead8">
                  <head>Scope and Contents note</head>
                  <p>There are several database projects in IBM Research, San Jose, including work on distributed database systems, on high availability, on high performance and on databases for engineering design. Descriptions will be give of these activities with a concentration on R*, a distributed database system, which is now a working prototype, running on three IBM 4341 machines. R* is a confederation of co-operating sites each supporting the relational model of data. To achieve maximum site autonomy, statements in the language SQL are compiled, data objects are named and catalogued, and deadlock detention and recovery are all handled in a distributed manner. The R* architecture is presented.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref409_zi6" level="file">
               <did>
                  <unittitle>A High-Performance Implementation of Smalltalk-80™, Allan M. Schiffman</unittitle>
                  <unitid>V0058.133</unitid>
                  <unitdate normal="1983/1983" type="inclusive">1983-01-12</unitdate>
                  <physdesc id="aspace_4a1cfad1758db2e60af56182e66e85b6">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_2c3db4836832094aefb1e138bcba4a59" type="box">23</container>
               </did>
               <scopecontent id="aspace_08ef9c255e98889dd15e22986fdadd0e">
                  <head>Scope and Contents note</head>
                  <p>The programming language and environment Smalltalk-80 has been implemented on a variety of processors. The talk describes yet another implementation on a commercially-available microprocessor system (the SUN workstation). The details of the implementation are of interest since significant performance improvements have been obtained without sacrificing the existing semantics of Smalltalk. A preliminary version of the system has been benchmarked. In several significant departures from the implementation suggestions of the Smalltalk virtual-machine designers, our implementation has achieved substantial performance improvements. The overall design strategy has been summed up – "The implementer must cheat, but not get caught." We can group the majority of the departures under the headings of "dynamic translation" and "optimized contexts." These techniques could be applied to implementations of languages other than Smalltalk.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref412_sc4" level="file">
               <did>
                  <unittitle>Packet Network Interconnection Standards, Vint Cerf</unittitle>
                  <unitid>V0058.134</unitid>
                  <unitdate normal="1983/1983" type="inclusive">1983-02-01</unitdate>
                  <physdesc id="aspace_5f1bb902c1348d73a6dd8cf92242a204">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_07c97f5f7b187b3a0eaffff66429b784" type="box">24</container>
               </did>
               <scopecontent id="aspace_4fb3693a119e579d14d79ab4aa1eef1f">
                  <head>Scope and Contents note</head>
                  <p>This talk provides an overview of the history of packet switching. Relevant packet-switching technology will be reviewed, including packet radio, packet satellite, local networks, and terrestrial packet networks such as the ARPANET. We will then review network interconnection techniques leading to the present Department of Defense packet protocol standards, collectively referred to as the ARPA internet protocols.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref415_z7v" level="file">
               <did>
                  <unittitle>The Cedar Systems: Perspectives and Projections, Roy Levin</unittitle>
                  <unitid>V0058.135</unitid>
                  <unitdate normal="1983/1983" type="inclusive">1983-02-08</unitdate>
                  <physdesc id="aspace_77bfb5f0778f9d97d63399e75f3867ac">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_376fdd1ef88a5315e22d05f07d0a218c" type="box">24</container>
               </did>
               <scopecontent id="aspace_74b651a9753a00b5518f676ae51f06c8">
                  <head>Scope and Contents note</head>
                  <p>The Cedar system is an experimental programming environment for the "D" machines (Dorado, Dolphin, Dandelion). The language and system have been heavily influenced by other local programming systems, notably Mesa, Star, Smalltalk, and Interlisp. Consequently, it emphasizes integration of programming and non-programming tools in an environment tuned to rapid production of experimental software. This talk includes a brief review of the origins and goals of the Cedar project, a description of the present status, and a sketch of the probable development over the next couple of years. In the process, the talk focuses on the features of the system that are unique or unusual in Algol-tradition programming environments.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref418_sun" level="file">
               <did>
                  <unittitle>Evidential Reasoning in Perception, John D. Lowrance</unittitle>
                  <unitid>V0058.136</unitid>
                  <unitdate normal="1983/1983" type="inclusive">1983-02-22</unitdate>
                  <physdesc id="aspace_85740319dff2d96b38653260508f3d9d">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_f019c83f013004edec6d4fcceb8fd747" type="box">24</container>
               </did>
               <scopecontent id="aspace_48c558320b6b91b04827af27b03e5f76">
                  <head>Scope and Contents note</head>
                  <p>One common feature of my perceptual system is that it must reason based upon the evidential information that is provided by its sensors. Expert-system technology would seem to provide a mechanism for reasoning from evidence, yet there is very little agreement on how this should be done. Here we present our current understanding of this problem and some partial solutions. We begin by characterizing evidence as a body of information that is uncertain, incomplete, and sometimes inaccurate. Based on this characterization, we conclude that evidential reasoning requires both a method for pooling multiple bodies of evidence to arrive at a consensus opinion and some means of drawing the appropriate conclusions from that opinion. We contrast our approach, based on a relatively new mathematical theory of evidence, with those approaches based on Bayesian probability models. We believe that our approach has some significant advantages, particularly its ability to represent and reason from bounded ignorance. The specific problem addressed is that of multi-modal perception, particularly the integration of sensory information with prior world knowledge, in order to assess relevant aspects of the current environment. A prototype system has been constructed that demonstrates the utility of these techniques.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref421_7bk" level="file">
               <did>
                  <unittitle>Rediflow: A Multiprocessing Architecture Combining Reduction and Data Flow, Robert M. Keller</unittitle>
                  <unitid>V0058.137</unitid>
                  <unitdate normal="1983/1983" type="inclusive">1983-05-10</unitdate>
                  <physdesc id="aspace_d37192e19420a14572bbb2333d923154">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_a4846ccf82e8d0c781e1811867e74a62" type="box">24</container>
               </did>
               <scopecontent id="aspace_dce4faa4f18b1350b48eeb45bc799129">
                  <head>Scope and Contents note</head>
                  <p>Functional languages, i.e., languages based upon composition of functions rather than upon sequences of commands, have been conjectured to be useful in making the power of multiple processors more accessible. We demonstrate the utility of the functional approach within application domains such as logic programming and database updating. Two principle types of evaluation model, reduction and dataflow, have been proposed for highly-concurrent evaluation of functional languages. After pointing out the relative advantages of each type, we indicate how the two can profitably be combined. We then describe a proposal for Rediflow, a multiprocessor architecture based on the combined model, which also features system-managed distribution of tasks to processing elements.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref424_sil" level="file">
               <did>
                  <unittitle>How Fast Can a Single Instruction Counter Machine Execute?, Tilak Agerwala</unittitle>
                  <unitid>V0058.138</unitid>
                  <unitdate normal="1983/1983" type="inclusive">1983-05-24</unitdate>
                  <physdesc id="aspace_30cde1e01e3cd3ac3c93709976269fcb">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_5a161d74d09c367803917385ef6e4de7" type="box">24</container>
               </did>
               <scopecontent id="aspace_bfb803a1e07b92fb5e3f2a65380df471">
                  <head>Scope and Contents note</head>
                  <p>After a brief overview of the limitations of conventional pipelined processors and vector processors, this talk describes recent work at IMB Research on very high speed scalar machines. Our goal was the paper design of a machine that could sustain a speed of roughly 100 million instructions per second on general purpose scientific/engineering applications, with peak floating point performance of roughly 100 million floating point operations per second. The talk will identify the extent to which these goals were achieved and the combination of compiler, machine organization, and architecture approaches used. The chosen design point represents a new partitioning of work between the complier and the hardware. The talk will discuss the performance achievable by internally concurrent, "single instruction counter machines" and will compare our approach to others such as long instruction work computers and data flow.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref427_58c" level="file">
               <did>
                  <unittitle>Software Army on the March – Project Strategies and Tactics, John R. Mashey</unittitle>
                  <unitid>V0058.139</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (vhs)</extent>
                  </physdesc>
                  <unitdate normal="1983/1983" type="inclusive">1983-09-28</unitdate>
                  <container id="aspace_0200afb3601c7c2687184104d0708211" type="box">24</container>
               </did>
               <scopecontent id="aspace_58d2f801ecc367dcb6a4fca50e98d5d1">
                  <head>Scope and Contents note</head>
                  <p>This talk describes the work of an army building roads as an analogy to software projects. Decision-making processes are examined from two different viewpoints. The first is the formal game theory viewpoint – making decisions in a non-deterministic, multi-state, non-zero-sum game played with incomplete information. The second is the "army" model. From this viewpoint are discussed such issues as: fighting the right war in the right place and choosing good routes to reach the goals; the need for scouts on motorcycles ("fast prototypers"); how campaigns differ, and thus affect choice of troops; special precautions for earthquake country; getting natives to buy and drive your trucks, instead of shooting your tires out as you drive through their villages. There exist many similarities in the decision processes of formal game analysis, military planning, and project management. The talk uses the first and second to help shed light on the third.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref430_8ra" level="file">
               <did>
                  <unittitle>The Human Factor: Designing Computer Systems for People, Dick Rubinstein</unittitle>
                  <unitid>V0058.140</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (vhs)</extent>
                  </physdesc>
                  <unitdate normal="1984/1984" type="inclusive">1984-06-05</unitdate>
                  <container id="aspace_74339e9de01416989bcb780bcbecc999" type="box">24</container>
               </did>
               <scopecontent id="aspace_bd54e3f0b532b3e8a629b142e24a81ad">
                  <head>Scope and Contents note</head>
                  <p>What principles of human factors – and what just plain good ideas – may be applied to the design of quality user interfaces? Dr. Rubinstein advances a number of principles and ideas that can make computer systems better for all users, including examples from the VAXstation user interface.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref433_tgn" level="file">
               <did>
                  <unittitle>Belief, Awareness and Limited Reasoning, Joe Halpern</unittitle>
                  <unitid>V0058.141</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (vhs)</extent>
                  </physdesc>
                  <unitdate normal="1985/1985" type="inclusive">1985-10-01</unitdate>
                  <container id="aspace_4f6c409fe73f1c5d9ab0ab10921ca6ec" type="box">24</container>
               </did>
            </c02>
            <c02 id="aspace_ref435_kci" level="file">
               <did>
                  <unittitle>Perceptual Organization and the Representation of Natural Form, Alex P. Pentland</unittitle>
                  <unitid>V0058.142</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (vhs)</extent>
                  </physdesc>
                  <unitdate normal="1985/1985" type="inclusive">1985-11-19</unitdate>
                  <container id="aspace_0a7c0c66b37e0e411fc34da781e5c485" type="box">24</container>
               </did>
            </c02>
            <c02 id="aspace_ref437_6sh" level="file">
               <did>
                  <unittitle>A Knowledge-Based Approach to High-Level Program Optimization, Allen Goldberg</unittitle>
                  <unitid>V0058.143</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (vhs)</extent>
                  </physdesc>
                  <unitdate normal="1985/1985" type="inclusive">1985-12-10</unitdate>
                  <container id="aspace_8770ac9cde49598b93c1e19e1e99772e" type="box">24</container>
               </did>
            </c02>
            <c02 id="aspace_ref439_6le" level="file">
               <did>
                  <unittitle>Technology Trends of CMOS VLSI, Yoshio Nishi</unittitle>
                  <unitid>V0058.144</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (vhs)</extent>
                  </physdesc>
                  <unitdate normal="1986/1986" type="inclusive">1986-01-22</unitdate>
                  <container id="aspace_989846b5e7affce27d0bdc98de06ed25" type="box">24</container>
               </did>
            </c02>
            <c02 id="aspace_ref441_v8h" level="file">
               <did>
                  <unittitle>Lattices and Algorithms, Laszlo Lovasz</unittitle>
                  <unitid>V0058.145</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (vhs)</extent>
                  </physdesc>
                  <unitdate normal="1986/1986" type="inclusive">1986-02-18</unitdate>
                  <container id="aspace_92327c0b5e47f6bc5c6a538acee6ebd9" type="box">24</container>
               </did>
            </c02>
            <c02 id="aspace_ref443_th3" level="file">
               <did>
                  <unittitle>An Introduction to the Probabilistic Analysis of Combinatorial Algorithms, Richard Karp</unittitle>
                  <unitid>V0058.146</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (vhs)</extent>
                  </physdesc>
                  <unitdate normal="1987/1987" type="inclusive">1987-05-19</unitdate>
                  <container id="aspace_9b360f1b3b54f1987823330cdb03cb53" type="box">24</container>
               </did>
            </c02>
            <c02 id="aspace_ref445_axc" level="file">
               <did>
                  <unittitle>Adaptive Mesh Refinement for Hyperbolic Partial Differential Equations, Marsha J. Berger</unittitle>
                  <unitid>V0058.147</unitid>
                  <unitdate normal="1982/1982" type="inclusive">1982-07-07</unitdate>
                  <physdesc id="aspace_695a19fe52a9050d4dae8baffa13700d">
                     <extent>1 videotape(s) (U-matic)</extent>
                  </physdesc>
                  <container id="aspace_edbc5ebd85f92b3766fcd7d8e4d39391" type="box">24</container>
               </did>
               <scopecontent id="aspace_811fcbdd04ac4580b329fc754a8d952c">
                  <head>Scope and Contents note</head>
                  <p>In many time dependent simulations, the solution on most of the domain will be fairly smooth, with discontinuities or highly oscillatory phenomena occurring over only a small fraction of the domain. In problems such as these, a mesh refinement approach can be the most efficient, and often the only practical solution method. Refined grids with smaller and smaller mesh spacing are placed only where they are needed. Since we are solving a time dependent problem, the regions needing refinement will change, and therefore our grids must adapt with time as well. This thesis presents a method based on the idea of multiple, component grids for the solution of hyperbolic partial differential equations (pde) using explicit finite difference techniques. Using Richardson-type estimates of the local truncation error, refined grids are created or existing ones removed to attain a given accuracy for a minimum amount of work. In addition, this approach is recursive in that fine grids can themselves contain even finer subgrids. Those grids with finer mesh width in space will also have a smaller mesh width in time, making this a mesh refinement algorithm in time and space.</p>
               </scopecontent>
            </c02>
            <c02 id="aspace_ref448_rz4" level="file">
               <did>
                  <unittitle>Pamphlet to accompany talk by A. R. Stivers, Voltage Contrast: A Powerful Tool for VLSI Circuit Diagnosis</unittitle>
                  <unitid>V0058.148</unitid>
                  <container id="aspace_ccb1057cd8d0611808ba5adb71f6caa2" type="box">24</container>
               </did>
            </c02>
         </c01>
         <c01 audience="internal"
              id="aspace_73b30b58525afd74d024a207319222f0"
              level="series">
            <did>
               <unittitle>Additional Videorecordings</unittitle>
               <unitid>Accession ARCH-2017-023</unitid>
            </did>
         </c01>
         <c01 id="aspace_ref449_vk4" level="series">
            <did>
               <unittitle>Duplicate Videorecordings</unittitle>
               <unitid>Accession ARCH-2001-332</unitid>
            </did>
            <c02 id="aspace_ref450_1mg" level="file">
               <did>
                  <unittitle>Numbers 1-12, 14, 18-19</unittitle>
                  <container id="aspace_2a28133811e41fe1fc7f32353840710e" type="box">1</container>
               </did>
            </c02>
            <c02 id="aspace_ref451_gsr" level="file">
               <did>
                  <unittitle>Numbers 25, 28, 32-34, 37-40, 42-46</unittitle>
                  <container id="aspace_90cefd8c90343080276490f430a25268" type="box">2</container>
               </did>
            </c02>
            <c02 id="aspace_ref452_zul" level="file">
               <did>
                  <unittitle>Numbers 47-52, 54-61</unittitle>
                  <container id="aspace_0c3f97a8f647d384fb299b5da243e927" type="box">3</container>
               </did>
            </c02>
            <c02 id="aspace_ref453_yrm" level="file">
               <did>
                  <unittitle>Numbers 62-72 and Lectures of special interest A and C – E</unittitle>
                  <container id="aspace_976d9e9c800a3c88013062174e5de28a" type="box">4</container>
               </did>
            </c02>
            <c02 id="aspace_ref454_9xa" level="file">
               <did>
                  <unittitle>Lectures of special interest F – I</unittitle>
                  <container id="aspace_7173f245a65561e6ae8e3460e52157ca" type="box">5</container>
               </did>
            </c02>
         </c01>
         <c01 audience="internal"
              id="aspace_fe7576759bd3a32b5997225ca6c4b310"
              level="series">
            <did>
               <unittitle>Additional Videorecordings</unittitle>
               <unitid>Accession ARCH-2017-023</unitid>
               <unitdate type="inclusive">1981-1998</unitdate>
            </did>
            <c02 audience="internal"
                 id="aspace_d5ad63b5830555024868683f90b1e3bb"
                 level="file">
               <did>
                  <unittitle>Computer Forum Presents Mach: The OS of the Next Computer. Avadis Tevanian, NEXT</unittitle>
                  <unitid>V0058_149</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (VHS)</extent>
                  </physdesc>
                  <unitdate type="inclusive">undated</unitdate>
                  <container id="aspace_d325c579b9dc897fab4a87fa7e5811af" type="box">1</container>
               </did>
            </c02>
            <c02 audience="internal"
                 id="aspace_cdd3f97fc90be5756e6e911e1eb68ffe"
                 level="file">
               <did>
                  <unittitle>Stanford Computer Forum Distinguished Lecture Series: Knowledge Engineering (Japanese Translation)</unittitle>
                  <unitid>V0058_150</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (VHS)</extent>
                  </physdesc>
                  <unitdate type="inclusive">undated</unitdate>
                  <container id="aspace_7d17be6eb996f5980b197c0c9b985320" type="box">1</container>
               </did>
            </c02>
            <c02 audience="internal"
                 id="aspace_8e7721a93c40923591029320f7ae2311"
                 level="file">
               <did>
                  <unittitle>The Stanford Computer Forum Presents: Matt Rhodes - "Restructureable ULSI for Water Scale Integration"</unittitle>
                  <unitid>V0058_151</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (VHS)</extent>
                  </physdesc>
                  <unitdate type="inclusive">undated</unitdate>
                  <container id="aspace_04e258beaa9a49c52d277e6414ad5dec" type="box">1</container>
               </did>
            </c02>
            <c02 audience="internal"
                 id="aspace_f4745077dc7da47bdb802b7a327b1fe5"
                 level="file">
               <did>
                  <unittitle>Forum Video</unittitle>
                  <unitid>V0058_152</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (VHS)</extent>
                  </physdesc>
                  <unitdate type="inclusive">undated</unitdate>
                  <container id="aspace_29e89a4656d66003a994330d45738ebb" type="box">1</container>
               </did>
            </c02>
            <c02 audience="internal"
                 id="aspace_5c0799b86de6e0ae45facea775fe2a67"
                 level="file">
               <did>
                  <unittitle>Forum Overview Video: Stanford Computer Forum</unittitle>
                  <unitid>V0058_153</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (VHS)</extent>
                  </physdesc>
                  <unitdate type="inclusive">undated</unitdate>
                  <container id="aspace_dfcc03c7bca1b524d82d9082726d2bab" type="box">1</container>
               </did>
            </c02>
            <c02 audience="internal"
                 id="aspace_8cfae724f7ece07a9b639f5f95e7c8a4"
                 level="file">
               <did>
                  <unittitle>Stanford Computer Forum Presents: Mark Linton--"Inter Views: A C++ Graphical Interface Toolkit"</unittitle>
                  <unitid>V0058_154</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (VHS)</extent>
                  </physdesc>
                  <unitdate type="inclusive">undated</unitdate>
                  <container id="aspace_560d80f6711f94231d860aa8ecf37140" type="box">1</container>
               </did>
            </c02>
            <c02 audience="internal"
                 id="aspace_bfee1662254437bf7cf75850bb71c57f"
                 level="file">
               <did>
                  <unittitle>Stanford Computer Forum Presents: The Cydra 5: A Directed-dataflow Departmental Supercomputer/Bob Rau</unittitle>
                  <unitid>V0058_155</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (VHS)</extent>
                  </physdesc>
                  <unitdate type="inclusive">1988-10-5</unitdate>
                  <container id="aspace_b1f49bd85a135716baea844b8a6febf4" type="box">1</container>
               </did>
            </c02>
            <c02 audience="internal"
                 id="aspace_60c65717503b67cb99147953889ba8af"
                 level="file">
               <did>
                  <unittitle>Computer Forum Presents: Systems Day on Campus: Dennis Allison- "Architecture-Directed Code Optimization"</unittitle>
                  <unitid>V0058_156</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (VHS)</extent>
                  </physdesc>
                  <unitdate type="inclusive">1989-6-8</unitdate>
                  <container id="aspace_0b5e6eec59d010871b4b55443dcd6e55" type="box">1</container>
               </did>
            </c02>
            <c02 audience="internal"
                 id="aspace_0dd427eadf8172a2d0c4e3c915f573ca"
                 level="file">
               <did>
                  <unittitle>Computer Forum Presents: Systems Day on Campus: David Ungar- "Self: A High-Performance Object-Oriented Dynamically Typed Exploratory Programming Language"</unittitle>
                  <unitid>V0058_157</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (VHS)</extent>
                  </physdesc>
                  <unitdate type="inclusive">1989-6-8</unitdate>
                  <container id="aspace_3b39593cb7eaa2d287adce0e13385b16" type="box">1</container>
               </did>
            </c02>
            <c02 audience="internal"
                 id="aspace_a20cd57eeb39543ecd3f25cc179878ab"
                 level="file">
               <did>
                  <unittitle>Computer Forum Presents: AI and Technology. Stanford AI Day on Campus.</unittitle>
                  <unitid>V0058_158</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (VHS)</extent>
                  </physdesc>
                  <unitdate type="inclusive">1990-6</unitdate>
                  <container id="aspace_a8e7498800e8110f6e302c28ebd604f2" type="box">1</container>
               </did>
            </c02>
            <c02 audience="internal"
                 id="aspace_023f060acbc677e29d43c0dc05dd898c"
                 level="file">
               <did>
                  <unittitle>Computer Forum Presents: AI, the Brain, and Society. Stanford AI Day on Campus.</unittitle>
                  <unitid>V0058_159</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (VHS)</extent>
                  </physdesc>
                  <unitdate type="inclusive">1990-6</unitdate>
                  <container id="aspace_37b21688dc31267e988d03f8bdaa8d32" type="box">1</container>
               </did>
            </c02>
            <c02 audience="internal"
                 id="aspace_a02f776b0f3376824bbca9cb993f7518"
                 level="file">
               <did>
                  <unittitle>Computer Forum Presents: Agent-Centered Reasoning. Stanford AI Day on Campus.</unittitle>
                  <unitid>V0058_160</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (VHS)</extent>
                  </physdesc>
                  <unitdate type="inclusive">1990-6</unitdate>
                  <container id="aspace_6ca147c67dee492151515f295f4a0ff9" type="box">1</container>
               </did>
            </c02>
            <c02 audience="internal"
                 id="aspace_634d503dac1c685989e83ed87e6143c5"
                 level="file">
               <did>
                  <unittitle>The Stanford Computer Forum Presents: Time in the Human-Computer Interface. Dr Chuck Clanton, Aratar</unittitle>
                  <unitid>V0058_161</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (VHS)</extent>
                  </physdesc>
                  <unitdate type="inclusive">1981-5-29</unitdate>
                  <container id="aspace_5aa6d4277ce020ca62d4d806b6e59dee" type="box">1</container>
               </did>
            </c02>
            <c02 audience="internal"
                 id="aspace_67d39545ed8cd1b37765330815e72303"
                 level="file">
               <did>
                  <unittitle>The Stanford Computer Forum Presents: S-D-O-C with Professors Olukotun, Flynn, Mitchell (Tape 2)</unittitle>
                  <unitid>V0058_162</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (VHS)</extent>
                  </physdesc>
                  <unitdate type="inclusive">1992-6-11</unitdate>
                  <container id="aspace_a8103fe5ded5975145d55492310f23bd" type="box">1</container>
               </did>
            </c02>
            <c02 audience="internal"
                 id="aspace_cbe2df5aabf6f71073573741ab03176f"
                 level="file">
               <did>
                  <unittitle>The Stanford Computer Forum Video Journal: Heterogeneous Multidatabase Systems</unittitle>
                  <unitid>V0058_163</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (VHS)</extent>
                  </physdesc>
                  <unitdate type="inclusive">1992</unitdate>
                  <container id="aspace_5fad8b74c08d5c508476fbc118a3bf60" type="box">1</container>
               </did>
            </c02>
            <c02 audience="internal"
                 id="aspace_96ccf96b5ad5c0a0343198e96888a334"
                 level="file">
               <did>
                  <unittitle>Stanford Computer Forum Presents: Systems Day on Campus</unittitle>
                  <unitid>V0058_164</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (VHS)</extent>
                  </physdesc>
                  <unitdate type="inclusive">undated</unitdate>
                  <container id="aspace_a1c64f32270c92debcb8c22d22f5b2b3" type="box">1</container>
               </did>
            </c02>
            <c02 audience="internal"
                 id="aspace_754b2a85a248037a5d38a55b92163701"
                 level="file">
               <did>
                  <unittitle>The Stanford Computer Forum Presents: "Designing High Performance Circuits or What Mead and Conway Never Told You" Mark Horowitz</unittitle>
                  <unitid>V0058_165</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (VHS)</extent>
                  </physdesc>
                  <unitdate type="inclusive">undated</unitdate>
                  <container id="aspace_3d4312b4ae687c313d7e6b0607421352" type="box">1</container>
               </did>
            </c02>
            <c02 audience="internal"
                 id="aspace_8b7faaff8c696db05943a625889e54ba"
                 level="file">
               <did>
                  <unittitle>Computer Forum-Affiliate Testimony</unittitle>
                  <unitid>V0058_166</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (VHS)</extent>
                  </physdesc>
                  <unitdate type="inclusive">undated</unitdate>
                  <container id="aspace_13bef5cbcc12e9d4c497377fe9761da4" type="box">1</container>
               </did>
            </c02>
            <c02 audience="internal"
                 id="aspace_593f439d4ca1b00eb3a30835a92a0199"
                 level="file">
               <did>
                  <unittitle>Stanford Computer Forum: CS Department Overview</unittitle>
                  <unitid>V0058_167</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (VHS)</extent>
                  </physdesc>
                  <unitdate type="inclusive">undated</unitdate>
                  <container id="aspace_a5dab61f861abb821949b39faa2e3ee1" type="box">1</container>
               </did>
            </c02>
            <c02 audience="internal"
                 id="aspace_aa07218ea2570cc65b47c82fc7fb6d83"
                 level="file">
               <did>
                  <unittitle>CS Annual Forum Meeting Panel Discussion</unittitle>
                  <unitid>V0058_168</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (VHS)</extent>
                  </physdesc>
                  <unitdate type="inclusive">1998-3-19</unitdate>
                  <container id="aspace_37a530719ad8da3f419026f2e24c36f6" type="box">1</container>
               </did>
            </c02>
            <c02 audience="internal"
                 id="aspace_04c0d9e0392c527f263fc4ea532fd718"
                 level="file">
               <did>
                  <unittitle>CS Annual Forum Meeting Panel Discussion</unittitle>
                  <unitid>V0058_169</unitid>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (VHS)</extent>
                  </physdesc>
                  <unitdate type="inclusive">1998-3-19</unitdate>
                  <container id="aspace_9cdcf3fcdded17456d1deb8af32c3ced" type="box">1</container>
               </did>
            </c02>
            <c02 audience="internal"
                 id="aspace_7e16dcebbb9eae1d06a3d9b2dd029497"
                 level="file">
               <did>
                  <unittitle>CSci 8899: Computer Science Colloquium: Convergence Architecture and the Stanford FLASH Machine, Dr. John Hennessy, Stanford</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 videotape(s) (VHS)</extent>
                  </physdesc>
                  <unitdate type="inclusive">1998 Apr 6</unitdate>
                  <container id="aspace_1035c0591a9ecb792a98c93906109e71" type="Box">2</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o11" level="otherlevel">
               <did>
                  <unittitle>unlabeled</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 floppy disk(s) (3.5 inch)</extent>
                  </physdesc>
                  <container id="aspace_cc72bf0eb0dc0aa358d9fd6c0b5c3a41" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o21" level="otherlevel">
               <did>
                  <unittitle>Annual Meeting World Symposium Japan</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 floppy disk(s) (3.5 inch)</extent>
                  </physdesc>
                  <unitdate type="inclusive">2001 May - Jun</unitdate>
                  <container id="aspace_35e4708b76a7caeaefcef47171ab1eee" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o31" level="otherlevel">
               <did>
                  <unittitle>Annual Meeting , World Japan Symposium, WSJ-Binder</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 floppy disk(s) (3.5 inch)</extent>
                  </physdesc>
                  <unitdate type="inclusive">2001</unitdate>
                  <container id="aspace_2177c8730136945cf04c21d5d6d7e8a2" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o41" level="otherlevel">
               <did>
                  <unittitle>Visiting scholar certificate Suzanne  Bill's BBQ events</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 floppy disk(s) (3.5 inch)</extent>
                  </physdesc>
                  <container id="aspace_f7cb26a968ab53ac55d9e218635d25a7" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o51" level="otherlevel">
               <did>
                  <unittitle>unlabeled</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (cd)</extent>
                  </physdesc>
                  <container id="aspace_cfdacf37a7f58cb6db3518cbb6d06162" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o61" level="otherlevel">
               <did>
                  <unittitle>unlabeled</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <container id="aspace_39fc49e0696bd73fda8c98604b6793af" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o71" level="otherlevel">
               <did>
                  <unittitle>unlabeled</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <container id="aspace_0cd06a3b7b0d3e6bc001ed908b7b19af" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o81" level="otherlevel">
               <did>
                  <unittitle>The Bornstein Burn forum video</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <unitdate type="inclusive">2000 Dec 15</unitdate>
                  <container id="aspace_99524187f0b4ad4d84c2dfd1e6b72e74" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o91" level="otherlevel">
               <did>
                  <unittitle>unlabeled</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <container id="aspace_db57c2690d4dc53321a4e7aee328a18e" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o101" level="otherlevel">
               <did>
                  <unittitle>unlabeled</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <container id="aspace_90aeb7825ed6954081debd498193b097" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o111" level="otherlevel">
               <did>
                  <unittitle>Edward McKwavy retirement Stanford Computer Forum Juliam Clark</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <container id="aspace_1429f9ff6e3ce4abcff57b897b6c4150" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o121" level="otherlevel">
               <did>
                  <unittitle>Archiving Digital Libraries</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <container id="aspace_ad39db87b92e01751cd2d87affbb1cff" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o131" level="otherlevel">
               <did>
                  <unittitle>unlabeled</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <container id="aspace_8058ccd74e483496bd73c6b9a923a7f3" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o141" level="otherlevel">
               <did>
                  <unittitle>Forum Video test</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <container id="aspace_3348f80c6bbf635745425e2e4c127bf5" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o151" level="otherlevel">
               <did>
                  <unittitle>unlabeled</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <container id="aspace_9b6daab925d61ab1889e8f71a72b827b" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o161" level="otherlevel">
               <did>
                  <unittitle>Forum Video test</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <unitdate type="inclusive">2000 Dec 7</unitdate>
                  <container id="aspace_1e57deb1dfb8274a56334535b5eee011" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o171" level="otherlevel">
               <did>
                  <unittitle>Good forum video</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <unitdate type="inclusive">2000 Dec 7</unitdate>
                  <container id="aspace_f445714e25fd3e5f44d3b0586cc842a8" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o181" level="otherlevel">
               <did>
                  <unittitle>Compressed trailers</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <container id="aspace_4c1a2c7ad1b0cca9b32d39bf5ec0312a" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o191" level="otherlevel">
               <did>
                  <unittitle>Final Project Files  back-up log to date</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <unitdate type="inclusive">2000 Sep 1</unitdate>
                  <container id="aspace_bcb18e7dc4eca8132e8c95939ed0175e" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o201" level="otherlevel">
               <did>
                  <unittitle>Trailers pointer and compressed files</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <container id="aspace_c79b7650e271f43a7b9fcf4339975dc8" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o211" level="otherlevel">
               <did>
                  <unittitle>Roberts, Mobile, Library, Robotics, Winograd, Security, Levoy trailers</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <container id="aspace_e7c82b4458c3289a75eab58ccce30d12" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o221" level="otherlevel">
               <did>
                  <unittitle>Full Sequences (Quicktime) Robotics, Library, Mobile, Winograd, Roberts, Security</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <container id="aspace_ebb9b54261258a449a0e09eb5b3ce3f9" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o231" level="otherlevel">
               <did>
                  <unittitle>Mark Levoy full Quicktime Sequence</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <container id="aspace_abfb950af7df7cd661d0483f968e9d86" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o241" level="otherlevel">
               <did>
                  <unittitle>Eric Roberts - interview Teaching at Harvard, HS</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <container id="aspace_c95c9267eb8640e10b28a5ee7397d56f" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o251" level="otherlevel">
               <did>
                  <unittitle>Trailers (Quicktime) Roberts, Mobile, Library, Robotics, Winograd, Security, Levoy</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <container id="aspace_4f99360d89e60ddbc8c625032116c547" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o261" level="otherlevel">
               <did>
                  <unittitle>Eric Roberts interview future Tech Worries</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <container id="aspace_e4a718c3b7123398528c6b1f81424984" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o271" level="otherlevel">
               <did>
                  <unittitle>Eric Roberts - Interview student breakdown, chart</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <container id="aspace_08b074794a1c7e261ddafdc1d9a0b94b" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o281" level="otherlevel">
               <did>
                  <unittitle>Eric Roberts - Interview Childhood aptitude test</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <container id="aspace_e722932f2761ad3115c5be269f495e22" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o291" level="otherlevel">
               <did>
                  <unittitle>Eric Roberts- Interview Student at Harvard</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <container id="aspace_c2a1d392f1a8908f7da5202a62dfc722" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o301" level="otherlevel">
               <did>
                  <unittitle>Eric Roberts - Interview thrill of Technology</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <container id="aspace_7c4dfc457cf3a93f0075325568d2fe24" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o311" level="otherlevel">
               <did>
                  <unittitle>Salisbury/ GS Ken Shows Kinematic Arm</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <container id="aspace_a18d7a300b7d60fd53a186f34b6e2c50" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o321" level="otherlevel">
               <did>
                  <unittitle>Salisbury/ GS Luis Shows Romeo</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <container id="aspace_748a96dc664b68aef0ac959b1e7b3675" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o331" level="otherlevel">
               <did>
                  <unittitle>Salisbury/ GS Diego Demos Haptics 5</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <container id="aspace_b250e4ac1f717a6b6cd74e5bceecec66" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o341" level="otherlevel">
               <did>
                  <unittitle>Salisbury/ GS 1. Diego Shows Hoptics -2, 2. Diego Shows Hoptics</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <container id="aspace_64d2c097e31d20ffc96ead0e96495543" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o351" level="otherlevel">
               <did>
                  <unittitle>Salisbury/GS Luis, Ken Demo Romeo</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <container id="aspace_348f6345bc328e69ed80211f15097857" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o361" level="otherlevel">
               <did>
                  <unittitle>Salisbury/ GS Ken Intros Haptics</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <container id="aspace_e5faf9fc784beab4eff74f8565cdef59" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o371" level="otherlevel">
               <did>
                  <unittitle>Salisbury/ GS Audience Shot 1</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <container id="aspace_1abe770a425951ae7391e757af4782dd" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o381" level="otherlevel">
               <did>
                  <unittitle>Salisbury/ GS 1. How to Make a Robot, 2. Salisbury Pointer file- yet another backup!</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <container id="aspace_889644cb7a3e8c678406c5e8b10f8a12" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o391" level="otherlevel">
               <did>
                  <unittitle>1. Mobile Comp. 2. Robotics, 3. Winograd Final Sequences (rough CD)</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <container id="aspace_31bb4a5fd854006d04dc5014a5d146ce" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o401" level="otherlevel">
               <did>
                  <unittitle>Salisbury / GS 1. Luis Shows Romeo  2. Ken at Whiteboard</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <container id="aspace_edc187d3ea75b60f3a46311b8bd22159" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o411" level="otherlevel">
               <did>
                  <unittitle>Salisbury /GS Pulley Group + Salisbury Pointer Backup</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <container id="aspace_46876574cbea2fc871d0fce370445b8b" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o421" level="otherlevel">
               <did>
                  <unittitle>Salisbury/GS Diego Shows Haptics</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <container id="aspace_23a7e1a3ac9e47c1efcb78a9322740c4" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o431" level="otherlevel">
               <did>
                  <unittitle>Salisbury/GS Diego Demos Haptics 4</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <container id="aspace_71659e9ded5379e5965ae212b64dba40" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o441" level="otherlevel">
               <did>
                  <unittitle>Salisbury/GS Luis Shows Romeo 3</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <container id="aspace_00aeda93ac473c4a6f43cb2bdbb75303" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o451" level="otherlevel">
               <did>
                  <unittitle>Project Salisbury/GS 1. Girl doing Haptics</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <container id="aspace_2dbb84ced9c5e2450c93567cf1fe0f2f" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o461" level="otherlevel">
               <did>
                  <unittitle>Ken Salisbury / GS 1. Ken at Whiteboard 2. Ken explains grad school</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <container id="aspace_c3c774b59d9a79db3ff7eb66dd51bfdb" type="Box">3</container>
               </did>
            </c02>
            <c02 id="aspace_s0b3o471" level="otherlevel">
               <did>
                  <unittitle>Salisbury/GS 1. Ken Welcomes GS 2. Romeo, Robotics lab 3. Diego shows Haptics 3 demos + Salisbury pointer file backup</unittitle>
                  <physdesc altrender="whole">
                     <extent altrender="materialtype spaceoccupied">1 optical disc(s) (dvd)</extent>
                  </physdesc>
                  <container id="aspace_95771152a1ae083b345952a7c6d07d67" type="Box">3</container>
               </did>
            </c02>
         </c01>
      </dsc>
   </archdesc>
</ead>
